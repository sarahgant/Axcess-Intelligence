{"file":"C:\\Users\\sarah\\Repos\\CCH Axcess Intelligence Vibed\\tests\\unit\\environment.test.ts","mappings":"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","names":[],"sources":["C:\\Users\\sarah\\Repos\\CCH Axcess Intelligence Vibed\\tests\\unit\\environment.test.ts"],"sourcesContent":["import { loadEnvironment, env, getEnvironmentSummary, validateProductionEnvironment } from '../../src/config/environment';\r\n\r\n// Mock import.meta.env\r\nconst mockImportMetaEnv = {\r\n  VITE_API_BASE_URL: 'http://localhost:3001',\r\n  VITE_API_TIMEOUT: '5000',\r\n  VITE_ANTHROPIC_API_KEY: 'sk-ant-test-key',\r\n  VITE_OPENAI_API_KEY: 'sk-test-key',\r\n  VITE_AI_PROVIDER: 'anthropic',\r\n  VITE_CORS_ORIGIN: 'http://localhost:5173',\r\n  VITE_RATE_LIMIT_REQUESTS: '100',\r\n  VITE_RATE_LIMIT_WINDOW: '60000',\r\n  VITE_ENABLE_LOGGING: 'true',\r\n  VITE_ENABLE_MONITORING: 'false',\r\n  VITE_ENABLE_CACHE: 'true',\r\n  VITE_MAX_FILE_SIZE: '20971520',\r\n  VITE_MAX_CONCURRENT_REQUESTS: '5',\r\n  VITE_CACHE_TTL: '3600',\r\n  VITE_DEBUG: 'false',\r\n  VITE_RETRY_MAX_ATTEMPTS: '3',\r\n  VITE_RETRY_INITIAL_DELAY: '1000',\r\n  VITE_RETRY_MAX_DELAY: '10000',\r\n  VITE_CIRCUIT_BREAKER_FAILURE_THRESHOLD: '5',\r\n  VITE_CIRCUIT_BREAKER_RESET_TIMEOUT: '60000',\r\n  VITE_CIRCUIT_BREAKER_SUCCESS_THRESHOLD: '2',\r\n  MODE: 'development'\r\n};\r\n\r\n// Mock the logger to avoid console output during tests\r\njest.mock('../../src/core/logging/logger', () => ({\r\n  logger: {\r\n    debug: jest.fn(),\r\n    info: jest.fn(),\r\n    warn: jest.fn(),\r\n    error: jest.fn(),\r\n    fatal: jest.fn()\r\n  }\r\n}));\r\n\r\ndescribe('Environment Configuration', () => {\r\n  beforeEach(() => {\r\n    // Reset import.meta.env mock\r\n    Object.defineProperty(global, 'import', {\r\n      value: {\r\n        meta: {\r\n          env: { ...mockImportMetaEnv }\r\n        }\r\n      },\r\n      writable: true\r\n    });\r\n  });\r\n\r\n  describe('loadEnvironment', () => {\r\n    it('should load environment with default values', () => {\r\n      const config = loadEnvironment();\r\n      \r\n      expect(config.API_BASE_URL).toBe('http://localhost:3001');\r\n      expect(config.API_TIMEOUT).toBe(5000);\r\n      expect(config.AI_PROVIDER).toBe('anthropic');\r\n      expect(config.ENABLE_LOGGING).toBe(true);\r\n      expect(config.ENABLE_CACHE).toBe(true);\r\n      expect(config.NODE_ENV).toBe('development');\r\n    });\r\n\r\n    it('should validate URL format for API_BASE_URL', () => {\r\n      Object.defineProperty(global, 'import', {\r\n        value: {\r\n          meta: {\r\n            env: { ...mockImportMetaEnv, VITE_API_BASE_URL: 'invalid-url' }\r\n          }\r\n        },\r\n        writable: true\r\n      });\r\n\r\n      expect(() => loadEnvironment()).toThrow('Invalid environment configuration');\r\n    });\r\n\r\n    it('should validate numeric values', () => {\r\n      Object.defineProperty(global, 'import', {\r\n        value: {\r\n          meta: {\r\n            env: { ...mockImportMetaEnv, VITE_API_TIMEOUT: 'invalid-number' }\r\n          }\r\n        },\r\n        writable: true\r\n      });\r\n\r\n      expect(() => loadEnvironment()).toThrow('Invalid environment configuration');\r\n    });\r\n\r\n    it('should validate enum values', () => {\r\n      Object.defineProperty(global, 'import', {\r\n        value: {\r\n          meta: {\r\n            env: { ...mockImportMetaEnv, VITE_AI_PROVIDER: 'invalid-provider' }\r\n          }\r\n        },\r\n        writable: true\r\n      });\r\n\r\n      expect(() => loadEnvironment()).toThrow('Invalid environment configuration');\r\n    });\r\n\r\n    it('should handle missing optional values', () => {\r\n      const envWithoutOptional = { ...mockImportMetaEnv };\r\n      delete envWithoutOptional.VITE_ANTHROPIC_API_KEY;\r\n      delete envWithoutOptional.VITE_OPENAI_API_KEY;\r\n\r\n      Object.defineProperty(global, 'import', {\r\n        value: {\r\n          meta: {\r\n            env: envWithoutOptional\r\n          }\r\n        },\r\n        writable: true\r\n      });\r\n\r\n      const config = loadEnvironment();\r\n      expect(config.ANTHROPIC_API_KEY).toBeUndefined();\r\n      expect(config.OPENAI_API_KEY).toBeUndefined();\r\n    });\r\n  });\r\n\r\n  describe('Environment Helpers', () => {\r\n    let config: any;\r\n\r\n    beforeEach(() => {\r\n      config = loadEnvironment();\r\n    });\r\n\r\n    describe('env.isDevelopment', () => {\r\n      it('should return true for development mode', () => {\r\n        expect(env.isDevelopment()).toBe(true);\r\n      });\r\n\r\n      it('should return false for production mode', () => {\r\n        Object.defineProperty(global, 'import', {\r\n          value: {\r\n            meta: {\r\n              env: { ...mockImportMetaEnv, MODE: 'production' }\r\n            }\r\n          },\r\n          writable: true\r\n        });\r\n        \r\n        const prodConfig = loadEnvironment();\r\n        expect(prodConfig.NODE_ENV).toBe('production');\r\n      });\r\n    });\r\n\r\n    describe('env.api', () => {\r\n      it('should return API configuration', () => {\r\n        expect(env.api.baseUrl()).toBe('http://localhost:3001');\r\n        expect(env.api.timeout()).toBe(5000);\r\n      });\r\n    });\r\n\r\n    describe('env.ai', () => {\r\n      it('should return AI provider configuration', () => {\r\n        expect(env.ai.provider()).toBe('anthropic');\r\n        expect(env.ai.anthropicKey()).toBe('sk-ant-test-key');\r\n        expect(env.ai.openaiKey()).toBe('sk-test-key');\r\n      });\r\n    });\r\n\r\n    describe('env.security', () => {\r\n      it('should return security configuration', () => {\r\n        expect(env.security.corsOrigin()).toBe('http://localhost:5173');\r\n        expect(env.security.rateLimitRequests()).toBe(100);\r\n        expect(env.security.rateLimitWindow()).toBe(60000);\r\n      });\r\n    });\r\n\r\n    describe('env.features', () => {\r\n      it('should return feature flags', () => {\r\n        expect(env.features.logging()).toBe(true);\r\n        expect(env.features.monitoring()).toBe(false);\r\n        expect(env.features.cache()).toBe(true);\r\n      });\r\n    });\r\n\r\n    describe('env.performance', () => {\r\n      it('should return performance configuration', () => {\r\n        expect(env.performance.maxFileSize()).toBe(20971520);\r\n        expect(env.performance.maxConcurrentRequests()).toBe(5);\r\n        expect(env.performance.cacheTTL()).toBe(3600);\r\n      });\r\n    });\r\n\r\n    describe('env.retry', () => {\r\n      it('should return retry configuration', () => {\r\n        expect(env.retry.maxAttempts()).toBe(3);\r\n        expect(env.retry.initialDelay()).toBe(1000);\r\n        expect(env.retry.maxDelay()).toBe(10000);\r\n      });\r\n    });\r\n\r\n    describe('env.circuitBreaker', () => {\r\n      it('should return circuit breaker configuration', () => {\r\n        expect(env.circuitBreaker.failureThreshold()).toBe(5);\r\n        expect(env.circuitBreaker.resetTimeout()).toBe(60000);\r\n        expect(env.circuitBreaker.successThreshold()).toBe(2);\r\n      });\r\n    });\r\n  });\r\n\r\n  describe('validateProductionEnvironment', () => {\r\n    it('should not throw error in development mode', () => {\r\n      expect(() => validateProductionEnvironment()).not.toThrow();\r\n    });\r\n\r\n    it('should throw error for missing required variables in production', () => {\r\n      Object.defineProperty(global, 'import', {\r\n        value: {\r\n          meta: {\r\n            env: { \r\n              ...mockImportMetaEnv, \r\n              MODE: 'production',\r\n              VITE_API_BASE_URL: '',\r\n              VITE_ANTHROPIC_API_KEY: '',\r\n              VITE_OPENAI_API_KEY: '',\r\n              VITE_CORS_ORIGIN: ''\r\n            }\r\n          }\r\n        },\r\n        writable: true\r\n      });\r\n\r\n      const prodConfig = loadEnvironment();\r\n      expect(() => validateProductionEnvironment()).toThrow('Missing required environment variables for production');\r\n    });\r\n\r\n    it('should pass validation with all required variables in production', () => {\r\n      Object.defineProperty(global, 'import', {\r\n        value: {\r\n          meta: {\r\n            env: { \r\n              ...mockImportMetaEnv, \r\n              MODE: 'production',\r\n              VITE_API_BASE_URL: 'https://api.production.com',\r\n              VITE_CORS_ORIGIN: 'https://app.production.com'\r\n            }\r\n          }\r\n        },\r\n        writable: true\r\n      });\r\n\r\n      const prodConfig = loadEnvironment();\r\n      expect(() => validateProductionEnvironment()).not.toThrow();\r\n    });\r\n  });\r\n\r\n  describe('getEnvironmentSummary', () => {\r\n    it('should return environment summary', () => {\r\n      const summary = getEnvironmentSummary();\r\n      \r\n      expect(summary.nodeEnv).toBe('development');\r\n      expect(summary.debug).toBe(false);\r\n      expect(summary.apiBaseUrl).toBe('http://localhost:3001');\r\n      expect(summary.aiProvider).toBe('anthropic');\r\n      expect(summary.features).toEqual({\r\n        logging: true,\r\n        monitoring: false,\r\n        cache: true,\r\n      });\r\n      expect(summary.performance).toEqual({\r\n        maxFileSize: '20MB',\r\n        maxConcurrentRequests: 5,\r\n        cacheTTL: '3600s',\r\n      });\r\n      expect(summary.retry).toEqual({\r\n        maxAttempts: 3,\r\n        initialDelay: '1000ms',\r\n        maxDelay: '10000ms',\r\n      });\r\n      expect(summary.circuitBreaker).toEqual({\r\n        failureThreshold: 5,\r\n        resetTimeout: '60000ms',\r\n        successThreshold: 2,\r\n      });\r\n    });\r\n  });\r\n\r\n  describe('Edge Cases', () => {\r\n    it('should handle empty string values', () => {\r\n      Object.defineProperty(global, 'import', {\r\n        value: {\r\n          meta: {\r\n            env: { \r\n              ...mockImportMetaEnv,\r\n              VITE_API_TIMEOUT: '',\r\n              VITE_RATE_LIMIT_REQUESTS: ''\r\n            }\r\n          }\r\n        },\r\n        writable: true\r\n      });\r\n\r\n      const config = loadEnvironment();\r\n      expect(config.API_TIMEOUT).toBe(5000); // Default value\r\n      expect(config.RATE_LIMIT_REQUESTS).toBe(100); // Default value\r\n    });\r\n\r\n    it('should handle undefined values', () => {\r\n      const envWithUndefined = { ...mockImportMetaEnv };\r\n      delete envWithUndefined.VITE_API_TIMEOUT;\r\n      delete envWithUndefined.VITE_RATE_LIMIT_REQUESTS;\r\n\r\n      Object.defineProperty(global, 'import', {\r\n        value: {\r\n          meta: {\r\n            env: envWithUndefined\r\n          }\r\n        },\r\n        writable: true\r\n      });\r\n\r\n      const config = loadEnvironment();\r\n      expect(config.API_TIMEOUT).toBe(5000); // Default value\r\n      expect(config.RATE_LIMIT_REQUESTS).toBe(100); // Default value\r\n    });\r\n\r\n    it('should validate numeric ranges', () => {\r\n      Object.defineProperty(global, 'import', {\r\n        value: {\r\n          meta: {\r\n            env: { \r\n              ...mockImportMetaEnv,\r\n              VITE_API_TIMEOUT: '0', // Below minimum\r\n              VITE_MAX_FILE_SIZE: '999999999999' // Above maximum\r\n            }\r\n          }\r\n        },\r\n        writable: true\r\n      });\r\n\r\n      expect(() => loadEnvironment()).toThrow('Invalid environment configuration');\r\n    });\r\n  });\r\n});\r\n"],"version":3}