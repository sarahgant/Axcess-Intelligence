{"version":3,"names":["require","wait","parseKeyDef","keyboard","text","actions","config","keyboardMap","i","length","keyboardAction","instance","keyDef","releasePrevious","releaseSelf","repeat","system","isKeyPressed","keyup","keydown","releaseAllKeys","k","getPressedKeys","exports"],"sources":["index.js"],"sourcesContent":["'use strict';\n\nrequire('../utils/dataTransfer/Clipboard.js');\nvar wait = require('../utils/misc/wait.js');\nvar parseKeyDef = require('./parseKeyDef.js');\n\nasync function keyboard(text) {\n    const actions = parseKeyDef.parseKeyDef(this.config.keyboardMap, text);\n    for(let i = 0; i < actions.length; i++){\n        await wait.wait(this.config);\n        await keyboardAction(this, actions[i]);\n    }\n}\nasync function keyboardAction(instance, { keyDef, releasePrevious, releaseSelf, repeat }) {\n    const { system } = instance;\n    // Release the key automatically if it was pressed before.\n    if (system.keyboard.isKeyPressed(keyDef)) {\n        await system.keyboard.keyup(instance, keyDef);\n    }\n    if (!releasePrevious) {\n        for(let i = 1; i <= repeat; i++){\n            await system.keyboard.keydown(instance, keyDef);\n            if (i < repeat) {\n                await wait.wait(instance.config);\n            }\n        }\n        // Release the key only on the last iteration on `state.repeatKey`.\n        if (releaseSelf) {\n            await system.keyboard.keyup(instance, keyDef);\n        }\n    }\n}\nasync function releaseAllKeys(instance) {\n    for (const k of instance.system.keyboard.getPressedKeys()){\n        await instance.system.keyboard.keyup(instance, k);\n    }\n}\n\nexports.keyboard = keyboard;\nexports.releaseAllKeys = releaseAllKeys;\n"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAAC,oCAAoC,CAAC;AAC7C,IAAIC,IAAI,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAC3C,IAAIE,WAAW,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAE7C,eAAeG,QAAQA,CAACC,IAAI,EAAE;EAC1B,MAAMC,OAAO,GAAGH,WAAW,CAACA,WAAW,CAAC,IAAI,CAACI,MAAM,CAACC,WAAW,EAAEH,IAAI,CAAC;EACtE,KAAI,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,OAAO,CAACI,MAAM,EAAED,CAAC,EAAE,EAAC;IACnC,MAAMP,IAAI,CAACA,IAAI,CAAC,IAAI,CAACK,MAAM,CAAC;IAC5B,MAAMI,cAAc,CAAC,IAAI,EAAEL,OAAO,CAACG,CAAC,CAAC,CAAC;EAC1C;AACJ;AACA,eAAeE,cAAcA,CAACC,QAAQ,EAAE;EAAEC,MAAM;EAAEC,eAAe;EAAEC,WAAW;EAAEC;AAAO,CAAC,EAAE;EACtF,MAAM;IAAEC;EAAO,CAAC,GAAGL,QAAQ;EAC3B;EACA,IAAIK,MAAM,CAACb,QAAQ,CAACc,YAAY,CAACL,MAAM,CAAC,EAAE;IACtC,MAAMI,MAAM,CAACb,QAAQ,CAACe,KAAK,CAACP,QAAQ,EAAEC,MAAM,CAAC;EACjD;EACA,IAAI,CAACC,eAAe,EAAE;IAClB,KAAI,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIO,MAAM,EAAEP,CAAC,EAAE,EAAC;MAC5B,MAAMQ,MAAM,CAACb,QAAQ,CAACgB,OAAO,CAACR,QAAQ,EAAEC,MAAM,CAAC;MAC/C,IAAIJ,CAAC,GAAGO,MAAM,EAAE;QACZ,MAAMd,IAAI,CAACA,IAAI,CAACU,QAAQ,CAACL,MAAM,CAAC;MACpC;IACJ;IACA;IACA,IAAIQ,WAAW,EAAE;MACb,MAAME,MAAM,CAACb,QAAQ,CAACe,KAAK,CAACP,QAAQ,EAAEC,MAAM,CAAC;IACjD;EACJ;AACJ;AACA,eAAeQ,cAAcA,CAACT,QAAQ,EAAE;EACpC,KAAK,MAAMU,CAAC,IAAIV,QAAQ,CAACK,MAAM,CAACb,QAAQ,CAACmB,cAAc,CAAC,CAAC,EAAC;IACtD,MAAMX,QAAQ,CAACK,MAAM,CAACb,QAAQ,CAACe,KAAK,CAACP,QAAQ,EAAEU,CAAC,CAAC;EACrD;AACJ;AAEAE,OAAO,CAACpB,QAAQ,GAAGA,QAAQ;AAC3BoB,OAAO,CAACH,cAAc,GAAGA,cAAc","ignoreList":[]}