{"file":"C:\\Users\\sarah\\Repos\\CCH Axcess Intelligence Vibed\\tests\\unit\\chat-container.test.tsx","mappings":"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","names":[],"sources":["C:\\Users\\sarah\\Repos\\CCH Axcess Intelligence Vibed\\tests\\unit\\chat-container.test.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { render, screen, fireEvent, waitFor } from \"@testing-library/react\";\r\nimport userEvent from \"@testing-library/user-event\";\r\nimport { ChatContainer, Message } from \"../../src/components/ui/chat-container\";\r\n\r\ndescribe(\"ChatContainer\", () => {\r\n  const mockOnSendMessage = jest.fn();\r\n  const mockOnStopStreaming = jest.fn();\r\n  const mockOnMessageFeedback = jest.fn();\r\n  const mockOnMessageCopy = jest.fn();\r\n\r\n  const sampleMessages: Message[] = [\r\n    {\r\n      id: \"1\",\r\n      content: \"Hello, I have a tax question\",\r\n      isUser: true,\r\n      timestamp: new Date(\"2024-01-01T12:00:00Z\"),\r\n    },\r\n    {\r\n      id: \"2\",\r\n      content: \"I'd be happy to help with your tax question. What specific area would you like to discuss?\",\r\n      isUser: false,\r\n      timestamp: new Date(\"2024-01-01T12:01:00Z\"),\r\n      citations: [\r\n        { text: \"IRC Section 162\", url: \"https://www.irs.gov/pub/irs-pdf/p535.pdf\" }\r\n      ],\r\n    },\r\n  ];\r\n\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  it(\"renders empty state when no messages\", () => {\r\n    render(\r\n      <ChatContainer\r\n        messages={[]}\r\n        onSendMessage={mockOnSendMessage}\r\n      />\r\n    );\r\n\r\n    expect(screen.getByText(\"Start a conversation\")).toBeInTheDocument();\r\n    expect(screen.getByText(\"Ask questions about tax law, document analysis, or get research assistance\")).toBeInTheDocument();\r\n  });\r\n\r\n  it(\"renders messages when provided\", () => {\r\n    render(\r\n      <ChatContainer\r\n        messages={sampleMessages}\r\n        onSendMessage={mockOnSendMessage}\r\n      />\r\n    );\r\n\r\n    expect(screen.getByText(\"Hello, I have a tax question\")).toBeInTheDocument();\r\n    expect(screen.getByText(\"I'd be happy to help with your tax question. What specific area would you like to discuss?\")).toBeInTheDocument();\r\n  });\r\n\r\n  it(\"renders chat input at the bottom\", () => {\r\n    render(\r\n      <ChatContainer\r\n        messages={sampleMessages}\r\n        onSendMessage={mockOnSendMessage}\r\n      />\r\n    );\r\n\r\n    const textInput = screen.getByRole(\"textbox\");\r\n    expect(textInput).toBeInTheDocument();\r\n    \r\n    const sendButton = screen.getByRole(\"button\", { name: /send message/i });\r\n    expect(sendButton).toBeInTheDocument();\r\n  });\r\n\r\n  it(\"calls onSendMessage when message is sent\", async () => {\r\n    const user = userEvent.setup();\r\n    render(\r\n      <ChatContainer\r\n        messages={[]}\r\n        onSendMessage={mockOnSendMessage}\r\n      />\r\n    );\r\n\r\n    const textInput = screen.getByRole(\"textbox\");\r\n    await user.type(textInput, \"Test message\");\r\n    await user.keyboard(\"{Enter}\");\r\n\r\n    expect(mockOnSendMessage).toHaveBeenCalledWith(\"Test message\");\r\n  });\r\n\r\n  it(\"shows stop button when streaming\", () => {\r\n    render(\r\n      <ChatContainer\r\n        messages={sampleMessages}\r\n        onSendMessage={mockOnSendMessage}\r\n        onStopStreaming={mockOnStopStreaming}\r\n        isStreaming={true}\r\n      />\r\n    );\r\n\r\n    const stopButton = screen.getByRole(\"button\", { name: /stop streaming response/i });\r\n    expect(stopButton).toBeInTheDocument();\r\n  });\r\n\r\n  it(\"calls onStopStreaming when stop button is clicked\", async () => {\r\n    const user = userEvent.setup();\r\n    render(\r\n      <ChatContainer\r\n        messages={sampleMessages}\r\n        onSendMessage={mockOnSendMessage}\r\n        onStopStreaming={mockOnStopStreaming}\r\n        isStreaming={true}\r\n      />\r\n    );\r\n\r\n    const stopButton = screen.getByRole(\"button\", { name: /stop streaming response/i });\r\n    await user.click(stopButton);\r\n\r\n    expect(mockOnStopStreaming).toHaveBeenCalled();\r\n  });\r\n\r\n  it(\"calls onMessageFeedback when feedback is given\", async () => {\r\n    const user = userEvent.setup();\r\n    render(\r\n      <ChatContainer\r\n        messages={sampleMessages}\r\n        onSendMessage={mockOnSendMessage}\r\n        onMessageFeedback={mockOnMessageFeedback}\r\n      />\r\n    );\r\n\r\n    // Find thumbs up button for AI message\r\n    const thumbsUpButtons = screen.getAllByRole(\"button\", { name: /thumbs up/i });\r\n    await user.click(thumbsUpButtons[0]);\r\n\r\n    expect(mockOnMessageFeedback).toHaveBeenCalledWith(\"2\", \"up\");\r\n  });\r\n\r\n  it(\"calls onMessageCopy when copy is clicked\", async () => {\r\n    // Mock clipboard API\r\n    Object.assign(navigator, {\r\n      clipboard: {\r\n        writeText: jest.fn(() => Promise.resolve()),\r\n      },\r\n    });\r\n\r\n    const user = userEvent.setup();\r\n    render(\r\n      <ChatContainer\r\n        messages={sampleMessages}\r\n        onSendMessage={mockOnSendMessage}\r\n        onMessageCopy={mockOnMessageCopy}\r\n      />\r\n    );\r\n\r\n    const copyButton = screen.getByRole(\"button\", { name: /copy message/i });\r\n    await user.click(copyButton);\r\n\r\n    expect(mockOnMessageCopy).toHaveBeenCalledWith(\"2\");\r\n  });\r\n\r\n  it(\"disables input when disabled prop is true\", () => {\r\n    render(\r\n      <ChatContainer\r\n        messages={[]}\r\n        onSendMessage={mockOnSendMessage}\r\n        disabled={true}\r\n      />\r\n    );\r\n\r\n    const textInput = screen.getByRole(\"textbox\");\r\n    expect(textInput).toBeDisabled();\r\n  });\r\n\r\n  it(\"does not send message when disabled\", async () => {\r\n    const user = userEvent.setup();\r\n    render(\r\n      <ChatContainer\r\n        messages={[]}\r\n        onSendMessage={mockOnSendMessage}\r\n        disabled={true}\r\n      />\r\n    );\r\n\r\n    const textInput = screen.getByRole(\"textbox\");\r\n    await user.type(textInput, \"Test message\");\r\n    await user.keyboard(\"{Enter}\");\r\n\r\n    expect(mockOnSendMessage).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it(\"uses custom placeholder when provided\", () => {\r\n    const customPlaceholder = \"Ask your tax question here...\";\r\n    render(\r\n      <ChatContainer\r\n        messages={[]}\r\n        onSendMessage={mockOnSendMessage}\r\n        placeholder={customPlaceholder}\r\n      />\r\n    );\r\n\r\n    const textInput = screen.getByRole(\"textbox\");\r\n    expect(textInput).toHaveAttribute(\"placeholder\", customPlaceholder);\r\n  });\r\n\r\n  it(\"scrolls to bottom when new messages are added\", async () => {\r\n    const scrollIntoViewMock = jest.fn();\r\n    global.HTMLElement.prototype.scrollIntoView = scrollIntoViewMock;\r\n\r\n    const { rerender } = render(\r\n      <ChatContainer\r\n        messages={[sampleMessages[0]]}\r\n        onSendMessage={mockOnSendMessage}\r\n      />\r\n    );\r\n\r\n    // Add a new message\r\n    rerender(\r\n      <ChatContainer\r\n        messages={sampleMessages}\r\n        onSendMessage={mockOnSendMessage}\r\n      />\r\n    );\r\n\r\n    await waitFor(() => {\r\n      expect(scrollIntoViewMock).toHaveBeenCalledWith({\r\n        behavior: \"smooth\",\r\n        block: \"nearest\"\r\n      });\r\n    });\r\n  });\r\n\r\n  it(\"handles streaming messages correctly\", () => {\r\n    const streamingMessages: Message[] = [\r\n      ...sampleMessages,\r\n      {\r\n        id: \"3\",\r\n        content: \"This message is currently being streamed...\",\r\n        isUser: false,\r\n        timestamp: new Date(\"2024-01-01T12:02:00Z\"),\r\n        isStreaming: true,\r\n      }\r\n    ];\r\n\r\n    render(\r\n      <ChatContainer\r\n        messages={streamingMessages}\r\n        onSendMessage={mockOnSendMessage}\r\n        isStreaming={true}\r\n      />\r\n    );\r\n\r\n    // Check that streaming message is rendered\r\n    expect(screen.getByText(\"This message is currently being streamed...\")).toBeInTheDocument();\r\n    \r\n    // Check that stop button is shown\r\n    expect(screen.getByRole(\"button\", { name: /stop streaming response/i })).toBeInTheDocument();\r\n  });\r\n\r\n  it(\"shows citations for messages that have them\", () => {\r\n    render(\r\n      <ChatContainer\r\n        messages={sampleMessages}\r\n        onSendMessage={mockOnSendMessage}\r\n      />\r\n    );\r\n\r\n    expect(screen.getByText(\"Sources:\")).toBeInTheDocument();\r\n    expect(screen.getByRole(\"link\", { name: \"IRC Section 162\" })).toBeInTheDocument();\r\n  });\r\n\r\n  it(\"maintains message order\", () => {\r\n    const manyMessages: Message[] = [\r\n      { id: \"1\", content: \"First message\", isUser: true, timestamp: new Date(\"2024-01-01T12:00:00Z\") },\r\n      { id: \"2\", content: \"Second message\", isUser: false, timestamp: new Date(\"2024-01-01T12:01:00Z\") },\r\n      { id: \"3\", content: \"Third message\", isUser: true, timestamp: new Date(\"2024-01-01T12:02:00Z\") },\r\n      { id: \"4\", content: \"Fourth message\", isUser: false, timestamp: new Date(\"2024-01-01T12:03:00Z\") },\r\n    ];\r\n\r\n    render(\r\n      <ChatContainer\r\n        messages={manyMessages}\r\n        onSendMessage={mockOnSendMessage}\r\n      />\r\n    );\r\n\r\n    const messages = screen.getAllByText(/message/);\r\n    expect(messages[0]).toHaveTextContent(\"First message\");\r\n    expect(messages[1]).toHaveTextContent(\"Second message\");\r\n    expect(messages[2]).toHaveTextContent(\"Third message\");\r\n    expect(messages[3]).toHaveTextContent(\"Fourth message\");\r\n  });\r\n\r\n  it(\"handles messages with feedback values\", () => {\r\n    const messagesWithFeedback: Message[] = [\r\n      {\r\n        id: \"1\",\r\n        content: \"AI message with positive feedback\",\r\n        isUser: false,\r\n        timestamp: new Date(\"2024-01-01T12:00:00Z\"),\r\n        feedback: \"up\",\r\n      },\r\n      {\r\n        id: \"2\", \r\n        content: \"AI message with negative feedback\",\r\n        isUser: false,\r\n        timestamp: new Date(\"2024-01-01T12:01:00Z\"),\r\n        feedback: \"down\",\r\n      }\r\n    ];\r\n\r\n    render(\r\n      <ChatContainer\r\n        messages={messagesWithFeedback}\r\n        onSendMessage={mockOnSendMessage}\r\n        onMessageFeedback={mockOnMessageFeedback}\r\n      />\r\n    );\r\n\r\n    const thumbsUpButtons = screen.getAllByRole(\"button\", { name: /thumbs up/i });\r\n    const thumbsDownButtons = screen.getAllByRole(\"button\", { name: /thumbs down/i });\r\n\r\n    // First message should have thumbs up highlighted\r\n    expect(thumbsUpButtons[0]).toHaveClass(\"text-green-600\");\r\n    \r\n    // Second message should have thumbs down highlighted\r\n    expect(thumbsDownButtons[1]).toHaveClass(\"text-red-600\");\r\n  });\r\n});"],"version":3}