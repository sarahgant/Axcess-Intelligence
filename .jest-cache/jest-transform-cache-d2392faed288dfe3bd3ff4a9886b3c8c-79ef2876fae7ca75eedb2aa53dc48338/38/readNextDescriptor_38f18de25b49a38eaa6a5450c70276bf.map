{"version":3,"names":["bracketDict","readNextDescriptor","text","context","pos","startBracket","length","isEscapedChar","RegExp","test","type","readPrintableChar","readTag","descriptor","assertDescriptor","consumedLength","releasePrevious","releaseSelf","repeat","_text_slice_match","_text_slice_match1","releasePreviousModifier","escapedDescriptor","Number","slice","match","undefined","_text_slice_match_","repeatModifier","releaseSelfModifier","expectedEndBracket","endBracket","Error","getErrorMessage","filter","Boolean","join","Math","max","substr","hasReleaseSelf","expected","found","exports"],"sources":["readNextDescriptor.js"],"sourcesContent":["'use strict';\n\nvar bracketDict = /*#__PURE__*/ function(bracketDict) {\n    bracketDict[\"{\"] = \"}\";\n    bracketDict[\"[\"] = \"]\";\n    return bracketDict;\n}(bracketDict || {});\n/**\n * Read the next key definition from user input\n *\n * Describe key per `{descriptor}` or `[descriptor]`.\n * Everything else will be interpreted as a single character as descriptor - e.g. `a`.\n * Brackets `{` and `[` can be escaped by doubling - e.g. `foo[[bar` translates to `foo[bar`.\n * A previously pressed key can be released per `{/descriptor}`.\n * Keeping the key pressed can be written as `{descriptor>}`.\n * When keeping the key pressed you can choose how long the key is pressed `{descriptor>3}`.\n * You can then release the key per `{descriptor>3/}` or keep it pressed and continue with the next key.\n */ function readNextDescriptor(text, context) {\n    let pos = 0;\n    const startBracket = text[pos] in bracketDict ? text[pos] : '';\n    pos += startBracket.length;\n    const isEscapedChar = new RegExp(`^\\\\${startBracket}{2}`).test(text);\n    const type = isEscapedChar ? '' : startBracket;\n    return {\n        type,\n        ...type === '' ? readPrintableChar(text, pos, context) : readTag(text, pos, type, context)\n    };\n}\nfunction readPrintableChar(text, pos, context) {\n    const descriptor = text[pos];\n    assertDescriptor(descriptor, text, pos, context);\n    pos += descriptor.length;\n    return {\n        consumedLength: pos,\n        descriptor,\n        releasePrevious: false,\n        releaseSelf: true,\n        repeat: 1\n    };\n}\nfunction readTag(text, pos, startBracket, context) {\n    var _text_slice_match, _text_slice_match1;\n    const releasePreviousModifier = text[pos] === '/' ? '/' : '';\n    pos += releasePreviousModifier.length;\n    const escapedDescriptor = startBracket === '{' && text[pos] === '\\\\';\n    pos += Number(escapedDescriptor);\n    const descriptor = escapedDescriptor ? text[pos] : (_text_slice_match = text.slice(pos).match(startBracket === '{' ? /^\\w+|^[^}>/]/ : /^\\w+/)) === null || _text_slice_match === undefined ? undefined : _text_slice_match[0];\n    assertDescriptor(descriptor, text, pos, context);\n    pos += descriptor.length;\n    var _text_slice_match_;\n    const repeatModifier = (_text_slice_match_ = (_text_slice_match1 = text.slice(pos).match(/^>\\d+/)) === null || _text_slice_match1 === undefined ? undefined : _text_slice_match1[0]) !== null && _text_slice_match_ !== undefined ? _text_slice_match_ : '';\n    pos += repeatModifier.length;\n    const releaseSelfModifier = text[pos] === '/' || !repeatModifier && text[pos] === '>' ? text[pos] : '';\n    pos += releaseSelfModifier.length;\n    const expectedEndBracket = bracketDict[startBracket];\n    const endBracket = text[pos] === expectedEndBracket ? expectedEndBracket : '';\n    if (!endBracket) {\n        throw new Error(getErrorMessage([\n            !repeatModifier && 'repeat modifier',\n            !releaseSelfModifier && 'release modifier',\n            `\"${expectedEndBracket}\"`\n        ].filter(Boolean).join(' or '), text[pos], text, context));\n    }\n    pos += endBracket.length;\n    return {\n        consumedLength: pos,\n        descriptor,\n        releasePrevious: !!releasePreviousModifier,\n        repeat: repeatModifier ? Math.max(Number(repeatModifier.substr(1)), 1) : 1,\n        releaseSelf: hasReleaseSelf(releaseSelfModifier, repeatModifier)\n    };\n}\nfunction assertDescriptor(descriptor, text, pos, context) {\n    if (!descriptor) {\n        throw new Error(getErrorMessage('key descriptor', text[pos], text, context));\n    }\n}\nfunction hasReleaseSelf(releaseSelfModifier, repeatModifier) {\n    if (releaseSelfModifier) {\n        return releaseSelfModifier === '/';\n    }\n    if (repeatModifier) {\n        return false;\n    }\n}\nfunction getErrorMessage(expected, found, text, context) {\n    return `Expected ${expected} but found \"${found !== null && found !== undefined ? found : ''}\" in \"${text}\"\n    See ${context === 'pointer' ? `https://testing-library.com/docs/user-event/pointer#pressing-a-button-or-touching-the-screen` : `https://testing-library.com/docs/user-event/keyboard`}\n    for more information about how userEvent parses your input.`;\n}\n\nexports.readNextDescriptor = readNextDescriptor;\n"],"mappings":"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","ignoreList":[]}