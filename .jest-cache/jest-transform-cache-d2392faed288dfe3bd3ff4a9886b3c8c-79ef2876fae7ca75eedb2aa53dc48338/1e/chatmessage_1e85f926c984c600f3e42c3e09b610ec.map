{"file":"C:\\Users\\sarah\\Repos\\CCH Axcess Intelligence Vibed\\src\\components\\ui\\chat-message.tsx","mappings":"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","names":[],"sources":["C:\\Users\\sarah\\Repos\\CCH Axcess Intelligence Vibed\\src\\components\\ui\\chat-message.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { cn } from \"../../lib/utils\";\r\n\r\nexport interface ChatMessageProps {\r\n  message: string;\r\n  isUser: boolean;\r\n  isStreaming?: boolean;\r\n  citations?: Array<{\r\n    text: string;\r\n    url: string;\r\n  }>;\r\n  timestamp?: Date;\r\n  onCopy?: () => void;\r\n  onFeedback?: (type: \"up\" | \"down\") => void;\r\n  feedbackValue?: \"up\" | \"down\" | null;\r\n}\r\n\r\nconst ChatMessage: React.FC<ChatMessageProps> = ({\r\n  message,\r\n  isUser,\r\n  isStreaming = false,\r\n  citations = [],\r\n  timestamp,\r\n  onCopy,\r\n  onFeedback,\r\n  feedbackValue,\r\n}) => {\r\n  const [showCopyToast, setShowCopyToast] = React.useState(false);\r\n\r\n  // Handle copy to clipboard\r\n  const handleCopy = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(message);\r\n      onCopy?.();\r\n      setShowCopyToast(true);\r\n      setTimeout(() => setShowCopyToast(false), 2000);\r\n    } catch (error) {\r\n      console.error(\"Failed to copy message:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle feedback\r\n  const handleFeedback = (type: \"up\" | \"down\") => {\r\n    onFeedback?.(type);\r\n  };\r\n\r\n  // Process message with citations\r\n  const processMessageWithCitations = (text: string) => {\r\n    if (citations.length === 0) return text;\r\n    \r\n    let processedText = text;\r\n    citations.forEach((citation, index) => {\r\n      const citationPlaceholder = `[${index + 1}]`;\r\n      const citationLink = (\r\n        <a\r\n          key={index}\r\n          href={citation.url}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"text-blue-600 underline hover:text-blue-800 font-medium\"\r\n          title={`Source: ${citation.text}`}\r\n        >\r\n          {citation.text}\r\n        </a>\r\n      );\r\n      // Note: This is a simplified implementation. In a real app, you'd want to use a proper\r\n      // text processing library to handle citation replacement with React elements\r\n    });\r\n    \r\n    return processedText;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"flex w-full mb-4\",\r\n        isUser ? \"justify-end\" : \"justify-start\"\r\n      )}\r\n      role=\"region\"\r\n      aria-label={isUser ? \"Your message\" : \"AI assistant message\"}\r\n    >\r\n      <div\r\n        className={cn(\r\n          \"max-w-[85%] rounded-lg px-4 py-3 text-sm\",\r\n          isUser\r\n            ? \"bg-primary text-primary-foreground ml-auto\"\r\n            : \"bg-muted text-muted-foreground mr-auto\"\r\n        )}\r\n      >\r\n        {/* Message content */}\r\n        <div className=\"whitespace-pre-wrap break-words\">\r\n          {processMessageWithCitations(message)}\r\n          {isStreaming && (\r\n            <span className=\"inline-block w-2 h-4 ml-1 bg-current animate-pulse\" />\r\n          )}\r\n        </div>\r\n\r\n        {/* Citations */}\r\n        {citations.length > 0 && (\r\n          <div className=\"mt-3 pt-3 border-t border-border/20\">\r\n            <div className=\"text-xs font-medium mb-2 opacity-75\">Sources:</div>\r\n            <div className=\"space-y-1\">\r\n              {citations.map((citation, index) => (\r\n                <div key={index}>\r\n                  <a\r\n                    href={citation.url}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"text-blue-600 underline hover:text-blue-800 text-xs font-medium\"\r\n                  >\r\n                    {citation.text}\r\n                  </a>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Timestamp */}\r\n        {timestamp && (\r\n          <div className=\"mt-2 text-xs opacity-50\">\r\n            {timestamp.toLocaleTimeString([], { \r\n              hour: \"2-digit\", \r\n              minute: \"2-digit\" \r\n            })}\r\n          </div>\r\n        )}\r\n\r\n        {/* Action buttons for AI messages */}\r\n        {!isUser && !isStreaming && (\r\n          <div className=\"flex items-center gap-2 mt-3 pt-3 border-t border-border/20\">\r\n            {/* Copy button */}\r\n            <button\r\n              onClick={handleCopy}\r\n              className=\"inline-flex items-center gap-1 px-2 py-1 text-xs rounded hover:bg-background/50 transition-colors\"\r\n              aria-label=\"Copy message\"\r\n            >\r\n              <svg\r\n                className=\"w-3 h-3\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"\r\n                />\r\n              </svg>\r\n              Copy\r\n            </button>\r\n\r\n            {/* Feedback buttons */}\r\n            <div className=\"flex items-center gap-1\">\r\n              <button\r\n                onClick={() => handleFeedback(\"up\")}\r\n                className={cn(\r\n                  \"inline-flex items-center p-1 rounded hover:bg-background/50 transition-colors\",\r\n                  feedbackValue === \"up\" && \"text-green-600\"\r\n                )}\r\n                aria-label=\"Thumbs up\"\r\n              >\r\n                <svg\r\n                  className=\"w-3 h-3\"\r\n                  fill={feedbackValue === \"up\" ? \"currentColor\" : \"none\"}\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V8a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n              \r\n              <button\r\n                onClick={() => handleFeedback(\"down\")}\r\n                className={cn(\r\n                  \"inline-flex items-center p-1 rounded hover:bg-background/50 transition-colors\",\r\n                  feedbackValue === \"down\" && \"text-red-600\"\r\n                )}\r\n                aria-label=\"Thumbs down\"\r\n              >\r\n                <svg\r\n                  className=\"w-3 h-3\"\r\n                  fill={feedbackValue === \"down\" ? \"currentColor\" : \"none\"}\r\n                  stroke=\"currentColor\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <path\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={2}\r\n                    d=\"M10 14H5.236a2 2 0 01-1.789-2.894l3.5-7A2 2 0 018.736 3h4.018c.163 0 .326.02.485.06L17 4m-7 10v2a2 2 0 002 2h.095c.5 0 .905-.405.905-.905 0-.714.211-1.412.608-2.006L17 13V4m-7 10h2M17 4h2a2 2 0 012 2v6a2 2 0 01-2 2h-2.5\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Copy success toast */}\r\n        {showCopyToast && (\r\n          <div className=\"absolute bottom-0 left-1/2 transform -translate-x-1/2 translate-y-full mt-2 px-3 py-1 bg-gray-900 text-white text-xs rounded shadow-lg\">\r\n            Copied to clipboard\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { ChatMessage };\r\nexport type { ChatMessageProps };"],"version":3}