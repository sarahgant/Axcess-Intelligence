{"file":"C:\\Users\\sarah\\Repos\\CCH Axcess Intelligence Vibed\\tests\\unit\\ErrorBoundary.test.tsx","mappings":";;;;;;AAAA,kDAA0B;AAC1B,kDAAmE;AACnE,sEAAmE;AACnE,kFAA+E;AAE/E,6CAA6C;AAC7C,MAAM,oBAAoB,GAAG,OAAO,CAAC,KAAK,CAAC;AAC3C,SAAS,CAAC,GAAG,EAAE;IACX,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AAC9B,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,GAAG,EAAE;IACV,OAAO,CAAC,KAAK,GAAG,oBAAoB,CAAC;AACzC,CAAC,CAAC,CAAC;AAEH,6CAA6C;AAC7C,MAAM,UAAU,GAAG,CAAC,EAAE,WAAW,GAAG,KAAK,EAA6B,EAAE,EAAE;IACtE,IAAI,WAAW,EAAE,CAAC;QACd,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;IAC1C,CAAC;IACD,OAAO,6DAAyB,CAAC;AACrC,CAAC,CAAC;AAEF,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC3B,UAAU,CAAC,GAAG,EAAE;QACZ,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;QAC/C,IAAA,cAAM,EACF,uBAAC,6BAAa,cACV,2DAAuB,GACX,CACnB,CAAC;QAEF,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,GAAG,EAAE;QACtD,IAAA,cAAM,EACF,uBAAC,6BAAa,cACV,uBAAC,UAAU,IAAC,WAAW,EAAE,IAAI,GAAI,GACrB,CACnB,CAAC;QAEF,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACrE,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,0EAA0E,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACzH,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAC1D,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAChD,MAAM,OAAO,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAE1B,IAAA,cAAM,EACF,uBAAC,6BAAa,IAAC,OAAO,EAAE,OAAO,YAC3B,uBAAC,UAAU,IAAC,WAAW,EAAE,IAAI,GAAI,GACrB,CACnB,CAAC;QAEF,MAAM,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAChC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EACjB,MAAM,CAAC,gBAAgB,CAAC;YACpB,cAAc,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC;SACrC,CAAC,CACL,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;QACpD,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,cAAM,EACvB,uBAAC,6BAAa,cACV,uBAAC,UAAU,IAAC,WAAW,EAAE,IAAI,GAAI,GACrB,CACnB,CAAC;QAEF,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAErE,kBAAkB;QAClB,iBAAS,CAAC,KAAK,CAAC,cAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;QAE/C,0BAA0B;QAC1B,QAAQ,CACJ,uBAAC,6BAAa,cACV,uBAAC,UAAU,IAAC,WAAW,EAAE,KAAK,GAAI,GACtB,CACnB,CAAC;QAEF,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAChD,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAC7B,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,EAAE;YACtC,KAAK,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE;YAC7B,QAAQ,EAAE,IAAI;SACjB,CAAC,CAAC;QAEH,IAAA,cAAM,EACF,uBAAC,6BAAa,cACV,uBAAC,UAAU,IAAC,WAAW,EAAE,IAAI,GAAI,GACrB,CACnB,CAAC;QAEF,iBAAS,CAAC,KAAK,CAAC,cAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;QACjD,MAAM,CAAC,UAAU,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;QAC7C,MAAM,cAAc,GAAG,mEAA+B,CAAC;QAEvD,IAAA,cAAM,EACF,uBAAC,6BAAa,IAAC,QAAQ,EAAE,cAAc,YACnC,uBAAC,UAAU,IAAC,WAAW,EAAE,IAAI,GAAI,GACrB,CACnB,CAAC;QAEF,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,sBAAsB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACrE,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC;IAC/E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;QAC/C,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,aAAa,CAAC;QAErC,IAAA,cAAM,EACF,uBAAC,6BAAa,cACV,uBAAC,UAAU,IAAC,WAAW,EAAE,IAAI,GAAI,GACrB,CACnB,CAAC;QAEF,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,6BAA6B,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAE5E,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,WAAW,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,GAAG,EAAE;QACtD,MAAM,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,YAAY,CAAC;QAEpC,IAAA,cAAM,EACF,uBAAC,6BAAa,cACV,uBAAC,UAAU,IAAC,WAAW,EAAE,IAAI,GAAI,GACrB,CACnB,CAAC;QAEF,MAAM,CAAC,cAAM,CAAC,WAAW,CAAC,6BAA6B,CAAC,CAAC,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC;QAElF,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,WAAW,CAAC;IACvC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACjC,UAAU,CAAC,GAAG,EAAE;QACZ,IAAI,CAAC,aAAa,EAAE,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;QAC/C,IAAA,cAAM,EACF,uBAAC,yCAAmB,IAAC,UAAU,EAAC,YAAY,YACxC,6DAAyB,GACP,CACzB,CAAC;QAEF,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gEAAgE,EAAE,GAAG,EAAE;QACtE,IAAA,cAAM,EACF,uBAAC,yCAAmB,IAAC,UAAU,EAAC,YAAY,YACxC,uBAAC,UAAU,IAAC,WAAW,EAAE,IAAI,GAAI,GACf,CACzB,CAAC;QAEF,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACjE,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,qGAAqG,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QACpJ,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAC1D,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;QAChD,MAAM,OAAO,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAE1B,IAAA,cAAM,EACF,uBAAC,yCAAmB,IAAC,UAAU,EAAC,YAAY,EAAC,OAAO,EAAE,OAAO,YACzD,uBAAC,UAAU,IAAC,WAAW,EAAE,IAAI,GAAI,GACf,CACzB,CAAC;QAEF,MAAM,CAAC,OAAO,CAAC,CAAC,oBAAoB,CAChC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EACjB,MAAM,CAAC,gBAAgB,CAAC;YACpB,cAAc,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC;SACrC,CAAC,CACL,CAAC;IACN,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;QACpD,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,cAAM,EACvB,uBAAC,yCAAmB,IAAC,UAAU,EAAC,YAAY,YACxC,uBAAC,UAAU,IAAC,WAAW,EAAE,IAAI,GAAI,GACf,CACzB,CAAC;QAEF,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;QAEjE,kBAAkB;QAClB,iBAAS,CAAC,KAAK,CAAC,cAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;QAE/C,0BAA0B;QAC1B,QAAQ,CACJ,uBAAC,yCAAmB,IAAC,UAAU,EAAC,YAAY,YACxC,uBAAC,UAAU,IAAC,WAAW,EAAE,KAAK,GAAI,GAChB,CACzB,CAAC;QAEF,MAAM,CAAC,cAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC;IACnE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;QACpD,MAAM,YAAY,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAC/B,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,EAAE;YACtC,KAAK,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE;YAC7B,QAAQ,EAAE,IAAI;SACjB,CAAC,CAAC;QAEH,IAAA,cAAM,EACF,uBAAC,yCAAmB,IAAC,UAAU,EAAC,YAAY,YACxC,uBAAC,UAAU,IAAC,WAAW,EAAE,IAAI,GAAI,GACf,CACzB,CAAC;QAEF,iBAAS,CAAC,KAAK,CAAC,cAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;QAChD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,GAAG,EAAE;QAC9C,IAAA,cAAM,EACF,uBAAC,yCAAmB,IAAC,UAAU,EAAC,YAAY,YACxC,uBAAC,UAAU,IAAC,WAAW,EAAE,IAAI,GAAI,GACf,CACzB,CAAC;QAEF,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,oBAAoB,CACtC,qCAAqC,EACrC,MAAM,CAAC,gBAAgB,CAAC;YACpB,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC;YACzB,cAAc,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC;YAClC,UAAU,EAAE,YAAY;YACxB,SAAS,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC;YAC7B,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC;SAC1B,CAAC,CACL,CAAC;IACN,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","names":[],"sources":["C:\\Users\\sarah\\Repos\\CCH Axcess Intelligence Vibed\\tests\\unit\\ErrorBoundary.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport { render, screen, fireEvent } from '@testing-library/react';\r\nimport { ErrorBoundary } from '../../src/components/ErrorBoundary';\r\nimport { ScreenErrorBoundary } from '../../src/components/ScreenErrorBoundary';\r\n\r\n// Mock console.error to avoid noise in tests\r\nconst originalConsoleError = console.error;\r\nbeforeAll(() => {\r\n    console.error = jest.fn();\r\n});\r\n\r\nafterAll(() => {\r\n    console.error = originalConsoleError;\r\n});\r\n\r\n// Component that throws an error for testing\r\nconst ThrowError = ({ shouldThrow = false }: { shouldThrow?: boolean }) => {\r\n    if (shouldThrow) {\r\n        throw new Error('Test error message');\r\n    }\r\n    return <div>Normal content</div>;\r\n};\r\n\r\ndescribe('ErrorBoundary', () => {\r\n    beforeEach(() => {\r\n        jest.clearAllMocks();\r\n    });\r\n\r\n    it('renders children when there is no error', () => {\r\n        render(\r\n            <ErrorBoundary>\r\n                <div>Test content</div>\r\n            </ErrorBoundary>\r\n        );\r\n\r\n        expect(screen.getByText('Test content')).toBeInTheDocument();\r\n    });\r\n\r\n    it('renders error fallback when child throws error', () => {\r\n        render(\r\n            <ErrorBoundary>\r\n                <ThrowError shouldThrow={true} />\r\n            </ErrorBoundary>\r\n        );\r\n\r\n        expect(screen.getByText('Something went wrong')).toBeInTheDocument();\r\n        expect(screen.getByText('We encountered an unexpected error. Please try again or reload the page.')).toBeInTheDocument();\r\n        expect(screen.getByText('Try Again')).toBeInTheDocument();\r\n        expect(screen.getByText('Reload Page')).toBeInTheDocument();\r\n    });\r\n\r\n    it('calls onError callback when error occurs', () => {\r\n        const onError = jest.fn();\r\n\r\n        render(\r\n            <ErrorBoundary onError={onError}>\r\n                <ThrowError shouldThrow={true} />\r\n            </ErrorBoundary>\r\n        );\r\n\r\n        expect(onError).toHaveBeenCalledWith(\r\n            expect.any(Error),\r\n            expect.objectContaining({\r\n                componentStack: expect.any(String)\r\n            })\r\n        );\r\n    });\r\n\r\n    it('resets error state when Try Again is clicked', () => {\r\n        const { rerender } = render(\r\n            <ErrorBoundary>\r\n                <ThrowError shouldThrow={true} />\r\n            </ErrorBoundary>\r\n        );\r\n\r\n        expect(screen.getByText('Something went wrong')).toBeInTheDocument();\r\n\r\n        // Click Try Again\r\n        fireEvent.click(screen.getByText('Try Again'));\r\n\r\n        // Re-render with no error\r\n        rerender(\r\n            <ErrorBoundary>\r\n                <ThrowError shouldThrow={false} />\r\n            </ErrorBoundary>\r\n        );\r\n\r\n        expect(screen.getByText('Normal content')).toBeInTheDocument();\r\n    });\r\n\r\n    it('reloads page when Reload Page is clicked', () => {\r\n        const reloadMock = jest.fn();\r\n        Object.defineProperty(window, 'location', {\r\n            value: { reload: reloadMock },\r\n            writable: true\r\n        });\r\n\r\n        render(\r\n            <ErrorBoundary>\r\n                <ThrowError shouldThrow={true} />\r\n            </ErrorBoundary>\r\n        );\r\n\r\n        fireEvent.click(screen.getByText('Reload Page'));\r\n        expect(reloadMock).toHaveBeenCalled();\r\n    });\r\n\r\n    it('renders custom fallback when provided', () => {\r\n        const customFallback = <div>Custom error message</div>;\r\n\r\n        render(\r\n            <ErrorBoundary fallback={customFallback}>\r\n                <ThrowError shouldThrow={true} />\r\n            </ErrorBoundary>\r\n        );\r\n\r\n        expect(screen.getByText('Custom error message')).toBeInTheDocument();\r\n        expect(screen.queryByText('Something went wrong')).not.toBeInTheDocument();\r\n    });\r\n\r\n    it('shows error details in development mode', () => {\r\n        const originalEnv = process.env.NODE_ENV;\r\n        process.env.NODE_ENV = 'development';\r\n\r\n        render(\r\n            <ErrorBoundary>\r\n                <ThrowError shouldThrow={true} />\r\n            </ErrorBoundary>\r\n        );\r\n\r\n        expect(screen.getByText('Error Details (Development)')).toBeInTheDocument();\r\n\r\n        process.env.NODE_ENV = originalEnv;\r\n    });\r\n\r\n    it('does not show error details in production mode', () => {\r\n        const originalEnv = process.env.NODE_ENV;\r\n        process.env.NODE_ENV = 'production';\r\n\r\n        render(\r\n            <ErrorBoundary>\r\n                <ThrowError shouldThrow={true} />\r\n            </ErrorBoundary>\r\n        );\r\n\r\n        expect(screen.queryByText('Error Details (Development)')).not.toBeInTheDocument();\r\n\r\n        process.env.NODE_ENV = originalEnv;\r\n    });\r\n});\r\n\r\ndescribe('ScreenErrorBoundary', () => {\r\n    beforeEach(() => {\r\n        jest.clearAllMocks();\r\n    });\r\n\r\n    it('renders children when there is no error', () => {\r\n        render(\r\n            <ScreenErrorBoundary screenName=\"TestScreen\">\r\n                <div>Screen content</div>\r\n            </ScreenErrorBoundary>\r\n        );\r\n\r\n        expect(screen.getByText('Screen content')).toBeInTheDocument();\r\n    });\r\n\r\n    it('renders screen-specific error fallback when child throws error', () => {\r\n        render(\r\n            <ScreenErrorBoundary screenName=\"TestScreen\">\r\n                <ThrowError shouldThrow={true} />\r\n            </ScreenErrorBoundary>\r\n        );\r\n\r\n        expect(screen.getByText('TestScreen Error')).toBeInTheDocument();\r\n        expect(screen.getByText('We encountered an issue with the TestScreen screen. You can try again or return to the home screen.')).toBeInTheDocument();\r\n        expect(screen.getByText('Try Again')).toBeInTheDocument();\r\n        expect(screen.getByText('Go to Home')).toBeInTheDocument();\r\n    });\r\n\r\n    it('calls onError callback when error occurs', () => {\r\n        const onError = jest.fn();\r\n\r\n        render(\r\n            <ScreenErrorBoundary screenName=\"TestScreen\" onError={onError}>\r\n                <ThrowError shouldThrow={true} />\r\n            </ScreenErrorBoundary>\r\n        );\r\n\r\n        expect(onError).toHaveBeenCalledWith(\r\n            expect.any(Error),\r\n            expect.objectContaining({\r\n                componentStack: expect.any(String)\r\n            })\r\n        );\r\n    });\r\n\r\n    it('resets error state when Try Again is clicked', () => {\r\n        const { rerender } = render(\r\n            <ScreenErrorBoundary screenName=\"TestScreen\">\r\n                <ThrowError shouldThrow={true} />\r\n            </ScreenErrorBoundary>\r\n        );\r\n\r\n        expect(screen.getByText('TestScreen Error')).toBeInTheDocument();\r\n\r\n        // Click Try Again\r\n        fireEvent.click(screen.getByText('Try Again'));\r\n\r\n        // Re-render with no error\r\n        rerender(\r\n            <ScreenErrorBoundary screenName=\"TestScreen\">\r\n                <ThrowError shouldThrow={false} />\r\n            </ScreenErrorBoundary>\r\n        );\r\n\r\n        expect(screen.getByText('Normal content')).toBeInTheDocument();\r\n    });\r\n\r\n    it('navigates to home when Go to Home is clicked', () => {\r\n        const locationMock = jest.fn();\r\n        Object.defineProperty(window, 'location', {\r\n            value: { href: locationMock },\r\n            writable: true\r\n        });\r\n\r\n        render(\r\n            <ScreenErrorBoundary screenName=\"TestScreen\">\r\n                <ThrowError shouldThrow={true} />\r\n            </ScreenErrorBoundary>\r\n        );\r\n\r\n        fireEvent.click(screen.getByText('Go to Home'));\r\n        expect(window.location.href).toBe('/');\r\n    });\r\n\r\n    it('logs screen-specific error information', () => {\r\n        render(\r\n            <ScreenErrorBoundary screenName=\"TestScreen\">\r\n                <ThrowError shouldThrow={true} />\r\n            </ScreenErrorBoundary>\r\n        );\r\n\r\n        expect(console.error).toHaveBeenCalledWith(\r\n            'Screen Error Boundary (TestScreen):',\r\n            expect.objectContaining({\r\n                error: expect.any(String),\r\n                componentStack: expect.any(String),\r\n                screenName: 'TestScreen',\r\n                timestamp: expect.any(String),\r\n                url: expect.any(String)\r\n            })\r\n        );\r\n    });\r\n});\r\n"],"version":3}