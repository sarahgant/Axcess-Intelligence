{"version":3,"names":["cov_chr55ftnb","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","file","mappings","names","sources","sourcesContent","version","_coverageSchema","coverage","actualCoverage","BaseAIProvider","constructor","config","apiKey","baseUrl","defaultModel","timeout","maxRetries","handleError","error","context","console","getCapabilities","_a","response","status","Error","displayName","_b","_c","code","_d","message","includes","withRetry","operation","lastError","attempt","delay","Math","pow","warn","Promise","resolve","setTimeout","exports","ProviderUtils","generateMessageId","Date","now","random","toString","substr","validateApiKey","key","provider","length","startsWith","sanitizeContent","content","replace","estimateTokens","text","ceil","formatDocumentContext","documents","forEach","doc","index"],"sources":["C:\\Users\\sarah\\Repos\\CCH Axcess Intelligence Vibed\\src\\core\\providers\\base-provider.ts"],"sourcesContent":["/**\r\n * Base provider interface and common types for AI providers\r\n * Provides a unified interface for different AI services (Anthropic, OpenAI)\r\n */\r\n\r\n/**\r\n * Common message types for all AI providers\r\n */\r\nexport interface AIMessage {\r\n  role: 'user' | 'assistant' | 'system';\r\n  content: string;\r\n  id?: string;\r\n  timestamp?: Date;\r\n}\r\n\r\n/**\r\n * Streaming response handler for real-time message updates\r\n */\r\nexport interface StreamingHandler {\r\n  onToken: (token: string) => void;\r\n  onComplete: (fullResponse: string) => void;\r\n  onError: (error: Error) => void;\r\n  onStart?: () => void;\r\n}\r\n\r\n/**\r\n * Configuration options for AI requests\r\n */\r\nexport interface AIRequestOptions {\r\n  model?: string;\r\n  temperature?: number;\r\n  maxTokens?: number;\r\n  stream?: boolean;\r\n  timeout?: number;\r\n  systemPrompt?: string;\r\n  contextDocuments?: Array<{\r\n    name: string;\r\n    content: string;\r\n    type: string;\r\n  }>;\r\n}\r\n\r\n/**\r\n * Provider response structure\r\n */\r\nexport interface AIResponse {\r\n  id: string;\r\n  content: string;\r\n  model: string;\r\n  usage?: {\r\n    promptTokens: number;\r\n    completionTokens: number;\r\n    totalTokens: number;\r\n  };\r\n  finishReason?: 'stop' | 'length' | 'content_filter' | 'tool_calls';\r\n  timestamp: Date;\r\n}\r\n\r\n/**\r\n * Provider capabilities and metadata\r\n */\r\nexport interface ProviderCapabilities {\r\n  name: string;\r\n  displayName: string;\r\n  supportsStreaming: boolean;\r\n  supportsDocuments: boolean;\r\n  maxTokens: number;\r\n  supportedModels: string[];\r\n  defaultModel: string;\r\n}\r\n\r\n/**\r\n * Provider health status\r\n */\r\nexport interface ProviderHealth {\r\n  isHealthy: boolean;\r\n  lastChecked: Date;\r\n  averageResponseTime?: number;\r\n  errorRate?: number;\r\n  message?: string;\r\n}\r\n\r\n/**\r\n * Base abstract class that all AI providers must implement\r\n */\r\nexport abstract class BaseAIProvider {\r\n  protected apiKey: string;\r\n  protected baseUrl?: string;\r\n  protected defaultModel: string;\r\n  protected timeout: number;\r\n  protected maxRetries: number;\r\n\r\n  constructor(config: {\r\n    apiKey: string;\r\n    baseUrl?: string;\r\n    defaultModel: string;\r\n    timeout?: number;\r\n    maxRetries?: number;\r\n  }) {\r\n    this.apiKey = config.apiKey;\r\n    this.baseUrl = config.baseUrl;\r\n    this.defaultModel = config.defaultModel;\r\n    this.timeout = config.timeout || 30000;\r\n    this.maxRetries = config.maxRetries || 3;\r\n  }\r\n\r\n  /**\r\n   * Send a chat completion request\r\n   */\r\n  abstract sendMessage(\r\n    messages: AIMessage[],\r\n    options?: AIRequestOptions\r\n  ): Promise<AIResponse>;\r\n\r\n  /**\r\n   * Send a streaming chat completion request\r\n   */\r\n  abstract sendStreamingMessage(\r\n    messages: AIMessage[],\r\n    handler: StreamingHandler,\r\n    options?: AIRequestOptions\r\n  ): Promise<void>;\r\n\r\n  /**\r\n   * Get provider capabilities\r\n   */\r\n  abstract getCapabilities(): ProviderCapabilities;\r\n\r\n  /**\r\n   * Check provider health\r\n   */\r\n  abstract checkHealth(): Promise<ProviderHealth>;\r\n\r\n  /**\r\n   * Validate configuration\r\n   */\r\n  abstract validateConfig(): Promise<boolean>;\r\n\r\n  /**\r\n   * Clean shutdown for any cleanup needed\r\n   */\r\n  abstract dispose(): Promise<void>;\r\n\r\n  /**\r\n   * Common error handling utility\r\n   */\r\n  protected handleError(error: any, context: string): Error {\r\n    console.error(`[${this.getCapabilities().name}] Error in ${context}:`, error);\r\n    \r\n    if (error.response?.status === 401) {\r\n      return new Error(`Authentication failed for ${this.getCapabilities().displayName}. Please check your API key.`);\r\n    }\r\n    \r\n    if (error.response?.status === 429) {\r\n      return new Error(`Rate limit exceeded for ${this.getCapabilities().displayName}. Please try again later.`);\r\n    }\r\n    \r\n    if (error.response?.status >= 500) {\r\n      return new Error(`Server error from ${this.getCapabilities().displayName}. Please try again later.`);\r\n    }\r\n    \r\n    if (error.code === 'ECONNABORTED' || error.message?.includes('timeout')) {\r\n      return new Error(`Request timeout for ${this.getCapabilities().displayName}. Please try again.`);\r\n    }\r\n    \r\n    return new Error(`${this.getCapabilities().displayName} error: ${error.message || 'Unknown error'}`);\r\n  }\r\n\r\n  /**\r\n   * Retry logic for failed requests\r\n   */\r\n  protected async withRetry<T>(\r\n    operation: () => Promise<T>,\r\n    context: string\r\n  ): Promise<T> {\r\n    let lastError: Error;\r\n    \r\n    for (let attempt = 1; attempt <= this.maxRetries; attempt++) {\r\n      try {\r\n        return await operation();\r\n      } catch (error) {\r\n        lastError = this.handleError(error, context);\r\n        \r\n        if (attempt === this.maxRetries) {\r\n          throw lastError;\r\n        }\r\n        \r\n        // Exponential backoff: 1s, 2s, 4s\r\n        const delay = Math.pow(2, attempt - 1) * 1000;\r\n        console.warn(`[${this.getCapabilities().name}] Attempt ${attempt} failed, retrying in ${delay}ms...`);\r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n      }\r\n    }\r\n    \r\n    throw lastError!;\r\n  }\r\n\r\n  /**\r\n   * Format messages for the specific provider\r\n   */\r\n  protected abstract formatMessages(messages: AIMessage[]): any[];\r\n\r\n  /**\r\n   * Parse response from the specific provider\r\n   */\r\n  protected abstract parseResponse(response: any): AIResponse;\r\n}\r\n\r\n/**\r\n * Provider registry interface for managing multiple providers\r\n */\r\nexport interface ProviderRegistry {\r\n  register(name: string, provider: BaseAIProvider): void;\r\n  get(name: string): BaseAIProvider | null;\r\n  getAll(): Record<string, BaseAIProvider>;\r\n  remove(name: string): boolean;\r\n  getDefault(): BaseAIProvider | null;\r\n  setDefault(name: string): boolean;\r\n}\r\n\r\n/**\r\n * Common utility functions for all providers\r\n */\r\nexport const ProviderUtils = {\r\n  /**\r\n   * Create a unique message ID\r\n   */\r\n  generateMessageId: (): string => {\r\n    return `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n  },\r\n\r\n  /**\r\n   * Validate API key format (basic validation)\r\n   */\r\n  validateApiKey: (key: string, provider: string): boolean => {\r\n    if (!key || key.length < 10) {\r\n      return false;\r\n    }\r\n    \r\n    // Provider-specific basic validation\r\n    if (provider === 'anthropic' && !key.startsWith('sk-ant-')) {\r\n      return false;\r\n    }\r\n    \r\n    if (provider === 'openai' && !key.startsWith('sk-')) {\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  },\r\n\r\n  /**\r\n   * Sanitize content for safety\r\n   */\r\n  sanitizeContent: (content: string): string => {\r\n    // Basic content sanitization\r\n    return content.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '');\r\n  },\r\n\r\n  /**\r\n   * Calculate token count estimate (rough approximation)\r\n   */\r\n  estimateTokens: (text: string): number => {\r\n    // Rough estimation: ~4 characters per token\r\n    return Math.ceil(text.length / 4);\r\n  },\r\n\r\n  /**\r\n   * Format documents for context\r\n   */\r\n  formatDocumentContext: (documents: Array<{ name: string; content: string; type: string }>): string => {\r\n    if (!documents || documents.length === 0) {\r\n      return '';\r\n    }\r\n\r\n    let context = '\\n\\n--- DOCUMENT CONTEXT ---\\n';\r\n    documents.forEach((doc, index) => {\r\n      context += `\\nDocument ${index + 1}: ${doc.name} (${doc.type})\\n`;\r\n      context += `Content: ${doc.content}\\n`;\r\n    });\r\n    context += '--- END DOCUMENT CONTEXT ---\\n\\n';\r\n    \r\n    return context;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]}