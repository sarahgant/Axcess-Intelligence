a3bb329009fec9338bedf8819ea2b057
'use strict';

require('../utils/dataTransfer/Clipboard.js');
var getActiveElement = require('../utils/focus/getActiveElement.js');
var isFocusable = require('../utils/focus/isFocusable.js');
var findClosest = require('../utils/misc/findClosest.js');
var updateSelectionOnFocus = require('./selection/updateSelectionOnFocus.js');
var wrapEvent = require('./wrapEvent.js');

// Browsers do not dispatch FocusEvent if the document does not have focus.
// TODO: simulate FocusEvent in browsers
/**
 * Focus closest focusable element.
 */
function focusElement(element) {
  const target = findClosest.findClosest(element, isFocusable.isFocusable);
  const activeElement = getActiveElement.getActiveElement(element.ownerDocument);
  if ((target !== null && target !== undefined ? target : element.ownerDocument.body) === activeElement) {
    return;
  } else if (target) {
    wrapEvent.wrapEvent(() => target.focus());
  } else {
    wrapEvent.wrapEvent(() => activeElement === null || activeElement === undefined ? undefined : activeElement.blur());
  }
  updateSelectionOnFocus.updateSelectionOnFocus(target !== null && target !== undefined ? target : element.ownerDocument.body);
}
function blurElement(element) {
  if (!isFocusable.isFocusable(element)) return;
  const wasActive = getActiveElement.getActiveElement(element.ownerDocument) === element;
  if (!wasActive) return;
  wrapEvent.wrapEvent(() => element.blur());
}
exports.blurElement = blurElement;
exports.focusElement = focusElement;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwiZ2V0QWN0aXZlRWxlbWVudCIsImlzRm9jdXNhYmxlIiwiZmluZENsb3Nlc3QiLCJ1cGRhdGVTZWxlY3Rpb25PbkZvY3VzIiwid3JhcEV2ZW50IiwiZm9jdXNFbGVtZW50IiwiZWxlbWVudCIsInRhcmdldCIsImFjdGl2ZUVsZW1lbnQiLCJvd25lckRvY3VtZW50IiwidW5kZWZpbmVkIiwiYm9keSIsImZvY3VzIiwiYmx1ciIsImJsdXJFbGVtZW50Iiwid2FzQWN0aXZlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbImZvY3VzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxucmVxdWlyZSgnLi4vdXRpbHMvZGF0YVRyYW5zZmVyL0NsaXBib2FyZC5qcycpO1xudmFyIGdldEFjdGl2ZUVsZW1lbnQgPSByZXF1aXJlKCcuLi91dGlscy9mb2N1cy9nZXRBY3RpdmVFbGVtZW50LmpzJyk7XG52YXIgaXNGb2N1c2FibGUgPSByZXF1aXJlKCcuLi91dGlscy9mb2N1cy9pc0ZvY3VzYWJsZS5qcycpO1xudmFyIGZpbmRDbG9zZXN0ID0gcmVxdWlyZSgnLi4vdXRpbHMvbWlzYy9maW5kQ2xvc2VzdC5qcycpO1xudmFyIHVwZGF0ZVNlbGVjdGlvbk9uRm9jdXMgPSByZXF1aXJlKCcuL3NlbGVjdGlvbi91cGRhdGVTZWxlY3Rpb25PbkZvY3VzLmpzJyk7XG52YXIgd3JhcEV2ZW50ID0gcmVxdWlyZSgnLi93cmFwRXZlbnQuanMnKTtcblxuLy8gQnJvd3NlcnMgZG8gbm90IGRpc3BhdGNoIEZvY3VzRXZlbnQgaWYgdGhlIGRvY3VtZW50IGRvZXMgbm90IGhhdmUgZm9jdXMuXG4vLyBUT0RPOiBzaW11bGF0ZSBGb2N1c0V2ZW50IGluIGJyb3dzZXJzXG4vKipcbiAqIEZvY3VzIGNsb3Nlc3QgZm9jdXNhYmxlIGVsZW1lbnQuXG4gKi8gZnVuY3Rpb24gZm9jdXNFbGVtZW50KGVsZW1lbnQpIHtcbiAgICBjb25zdCB0YXJnZXQgPSBmaW5kQ2xvc2VzdC5maW5kQ2xvc2VzdChlbGVtZW50LCBpc0ZvY3VzYWJsZS5pc0ZvY3VzYWJsZSk7XG4gICAgY29uc3QgYWN0aXZlRWxlbWVudCA9IGdldEFjdGl2ZUVsZW1lbnQuZ2V0QWN0aXZlRWxlbWVudChlbGVtZW50Lm93bmVyRG9jdW1lbnQpO1xuICAgIGlmICgodGFyZ2V0ICE9PSBudWxsICYmIHRhcmdldCAhPT0gdW5kZWZpbmVkID8gdGFyZ2V0IDogZWxlbWVudC5vd25lckRvY3VtZW50LmJvZHkpID09PSBhY3RpdmVFbGVtZW50KSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9IGVsc2UgaWYgKHRhcmdldCkge1xuICAgICAgICB3cmFwRXZlbnQud3JhcEV2ZW50KCgpPT50YXJnZXQuZm9jdXMoKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgd3JhcEV2ZW50LndyYXBFdmVudCgoKT0+YWN0aXZlRWxlbWVudCA9PT0gbnVsbCB8fCBhY3RpdmVFbGVtZW50ID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiBhY3RpdmVFbGVtZW50LmJsdXIoKSk7XG4gICAgfVxuICAgIHVwZGF0ZVNlbGVjdGlvbk9uRm9jdXMudXBkYXRlU2VsZWN0aW9uT25Gb2N1cyh0YXJnZXQgIT09IG51bGwgJiYgdGFyZ2V0ICE9PSB1bmRlZmluZWQgPyB0YXJnZXQgOiBlbGVtZW50Lm93bmVyRG9jdW1lbnQuYm9keSk7XG59XG5mdW5jdGlvbiBibHVyRWxlbWVudChlbGVtZW50KSB7XG4gICAgaWYgKCFpc0ZvY3VzYWJsZS5pc0ZvY3VzYWJsZShlbGVtZW50KSkgcmV0dXJuO1xuICAgIGNvbnN0IHdhc0FjdGl2ZSA9IGdldEFjdGl2ZUVsZW1lbnQuZ2V0QWN0aXZlRWxlbWVudChlbGVtZW50Lm93bmVyRG9jdW1lbnQpID09PSBlbGVtZW50O1xuICAgIGlmICghd2FzQWN0aXZlKSByZXR1cm47XG4gICAgd3JhcEV2ZW50LndyYXBFdmVudCgoKT0+ZWxlbWVudC5ibHVyKCkpO1xufVxuXG5leHBvcnRzLmJsdXJFbGVtZW50ID0gYmx1ckVsZW1lbnQ7XG5leHBvcnRzLmZvY3VzRWxlbWVudCA9IGZvY3VzRWxlbWVudDtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWkEsT0FBTyxDQUFDLG9DQUFvQyxDQUFDO0FBQzdDLElBQUlDLGdCQUFnQixHQUFHRCxPQUFPLENBQUMsb0NBQW9DLENBQUM7QUFDcEUsSUFBSUUsV0FBVyxHQUFHRixPQUFPLENBQUMsK0JBQStCLENBQUM7QUFDMUQsSUFBSUcsV0FBVyxHQUFHSCxPQUFPLENBQUMsOEJBQThCLENBQUM7QUFDekQsSUFBSUksc0JBQXNCLEdBQUdKLE9BQU8sQ0FBQyx1Q0FBdUMsQ0FBQztBQUM3RSxJQUFJSyxTQUFTLEdBQUdMLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQzs7QUFFekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFJLFNBQVNNLFlBQVlBLENBQUNDLE9BQU8sRUFBRTtFQUMvQixNQUFNQyxNQUFNLEdBQUdMLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDSSxPQUFPLEVBQUVMLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDO0VBQ3hFLE1BQU1PLGFBQWEsR0FBR1IsZ0JBQWdCLENBQUNBLGdCQUFnQixDQUFDTSxPQUFPLENBQUNHLGFBQWEsQ0FBQztFQUM5RSxJQUFJLENBQUNGLE1BQU0sS0FBSyxJQUFJLElBQUlBLE1BQU0sS0FBS0csU0FBUyxHQUFHSCxNQUFNLEdBQUdELE9BQU8sQ0FBQ0csYUFBYSxDQUFDRSxJQUFJLE1BQU1ILGFBQWEsRUFBRTtJQUNuRztFQUNKLENBQUMsTUFBTSxJQUFJRCxNQUFNLEVBQUU7SUFDZkgsU0FBUyxDQUFDQSxTQUFTLENBQUMsTUFBSUcsTUFBTSxDQUFDSyxLQUFLLENBQUMsQ0FBQyxDQUFDO0VBQzNDLENBQUMsTUFBTTtJQUNIUixTQUFTLENBQUNBLFNBQVMsQ0FBQyxNQUFJSSxhQUFhLEtBQUssSUFBSSxJQUFJQSxhQUFhLEtBQUtFLFNBQVMsR0FBR0EsU0FBUyxHQUFHRixhQUFhLENBQUNLLElBQUksQ0FBQyxDQUFDLENBQUM7RUFDckg7RUFDQVYsc0JBQXNCLENBQUNBLHNCQUFzQixDQUFDSSxNQUFNLEtBQUssSUFBSSxJQUFJQSxNQUFNLEtBQUtHLFNBQVMsR0FBR0gsTUFBTSxHQUFHRCxPQUFPLENBQUNHLGFBQWEsQ0FBQ0UsSUFBSSxDQUFDO0FBQ2hJO0FBQ0EsU0FBU0csV0FBV0EsQ0FBQ1IsT0FBTyxFQUFFO0VBQzFCLElBQUksQ0FBQ0wsV0FBVyxDQUFDQSxXQUFXLENBQUNLLE9BQU8sQ0FBQyxFQUFFO0VBQ3ZDLE1BQU1TLFNBQVMsR0FBR2YsZ0JBQWdCLENBQUNBLGdCQUFnQixDQUFDTSxPQUFPLENBQUNHLGFBQWEsQ0FBQyxLQUFLSCxPQUFPO0VBQ3RGLElBQUksQ0FBQ1MsU0FBUyxFQUFFO0VBQ2hCWCxTQUFTLENBQUNBLFNBQVMsQ0FBQyxNQUFJRSxPQUFPLENBQUNPLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDM0M7QUFFQUcsT0FBTyxDQUFDRixXQUFXLEdBQUdBLFdBQVc7QUFDakNFLE9BQU8sQ0FBQ1gsWUFBWSxHQUFHQSxZQUFZIiwiaWdub3JlTGlzdCI6W119