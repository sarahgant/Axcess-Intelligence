{"version":3,"names":["index","require","setSelectionRange","type","element","text","skipClick","config","skipAutoClose","initialSelectionStart","initialSelectionEnd","disabled","click","undefined","keyboard","releaseAllKeys","exports"],"sources":["type.js"],"sourcesContent":["'use strict';\n\nvar index = require('../keyboard/index.js');\nrequire('../utils/dataTransfer/Clipboard.js');\nvar setSelectionRange = require('../event/selection/setSelectionRange.js');\n\nasync function type(element, text, { skipClick = this.config.skipClick, skipAutoClose = this.config.skipAutoClose, initialSelectionStart, initialSelectionEnd } = {}) {\n    // TODO: properly type guard\n    // we use this workaround for now to prevent changing behavior\n    if (element.disabled) return;\n    if (!skipClick) {\n        await this.click(element);\n    }\n    if (initialSelectionStart !== undefined) {\n        setSelectionRange.setSelectionRange(element, initialSelectionStart, initialSelectionEnd !== null && initialSelectionEnd !== undefined ? initialSelectionEnd : initialSelectionStart);\n    }\n    await this.keyboard(text);\n    if (!skipAutoClose) {\n        await index.releaseAllKeys(this);\n    }\n}\n\nexports.type = type;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,KAAK,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC3CA,OAAO,CAAC,oCAAoC,CAAC;AAC7C,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,yCAAyC,CAAC;AAE1E,eAAeE,IAAIA,CAACC,OAAO,EAAEC,IAAI,EAAE;EAAEC,SAAS,GAAG,IAAI,CAACC,MAAM,CAACD,SAAS;EAAEE,aAAa,GAAG,IAAI,CAACD,MAAM,CAACC,aAAa;EAAEC,qBAAqB;EAAEC;AAAoB,CAAC,GAAG,CAAC,CAAC,EAAE;EAClK;EACA;EACA,IAAIN,OAAO,CAACO,QAAQ,EAAE;EACtB,IAAI,CAACL,SAAS,EAAE;IACZ,MAAM,IAAI,CAACM,KAAK,CAACR,OAAO,CAAC;EAC7B;EACA,IAAIK,qBAAqB,KAAKI,SAAS,EAAE;IACrCX,iBAAiB,CAACA,iBAAiB,CAACE,OAAO,EAAEK,qBAAqB,EAAEC,mBAAmB,KAAK,IAAI,IAAIA,mBAAmB,KAAKG,SAAS,GAAGH,mBAAmB,GAAGD,qBAAqB,CAAC;EACxL;EACA,MAAM,IAAI,CAACK,QAAQ,CAACT,IAAI,CAAC;EACzB,IAAI,CAACG,aAAa,EAAE;IAChB,MAAMR,KAAK,CAACe,cAAc,CAAC,IAAI,CAAC;EACpC;AACJ;AAEAC,OAAO,CAACb,IAAI,GAAGA,IAAI","ignoreList":[]}