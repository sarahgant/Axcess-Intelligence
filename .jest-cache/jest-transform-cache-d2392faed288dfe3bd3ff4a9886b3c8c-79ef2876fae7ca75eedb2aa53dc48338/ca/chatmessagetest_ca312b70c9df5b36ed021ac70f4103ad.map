{"file":"C:\\Users\\sarah\\Repos\\CCH Axcess Intelligence Vibed\\tests\\unit\\chat-message.test.tsx","mappings":"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","names":[],"sources":["C:\\Users\\sarah\\Repos\\CCH Axcess Intelligence Vibed\\tests\\unit\\chat-message.test.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { render, screen, fireEvent, waitFor } from \"@testing-library/react\";\r\nimport userEvent from \"@testing-library/user-event\";\r\nimport { ChatMessage } from \"../../src/components/ui/chat-message\";\r\n\r\n// Mock clipboard API\r\nObject.assign(navigator, {\r\n  clipboard: {\r\n    writeText: jest.fn(() => Promise.resolve()),\r\n  },\r\n});\r\n\r\ndescribe(\"ChatMessage\", () => {\r\n  const mockOnCopy = jest.fn();\r\n  const mockOnFeedback = jest.fn();\r\n\r\n  beforeEach(() => {\r\n    jest.clearAllMocks();\r\n  });\r\n\r\n  it(\"renders user message with correct styling\", () => {\r\n    render(\r\n      <ChatMessage\r\n        message=\"Hello, this is a user message\"\r\n        isUser={true}\r\n        timestamp={new Date(\"2024-01-01T12:00:00Z\")}\r\n      />\r\n    );\r\n\r\n    const messageContainer = screen.getByText(\"Hello, this is a user message\").closest(\"div\");\r\n    expect(messageContainer).toHaveClass(\"bg-primary\", \"text-primary-foreground\");\r\n  });\r\n\r\n  it(\"renders AI message with correct styling\", () => {\r\n    render(\r\n      <ChatMessage\r\n        message=\"Hello, this is an AI response\"\r\n        isUser={false}\r\n        timestamp={new Date(\"2024-01-01T12:00:00Z\")}\r\n      />\r\n    );\r\n\r\n    const messageContainer = screen.getByText(\"Hello, this is an AI response\").closest(\"div\");\r\n    expect(messageContainer).toHaveClass(\"bg-muted\", \"text-muted-foreground\");\r\n  });\r\n\r\n  it(\"displays timestamp in correct format\", () => {\r\n    const timestamp = new Date(\"2024-01-01T12:30:00Z\");\r\n    render(\r\n      <ChatMessage\r\n        message=\"Test message\"\r\n        isUser={false}\r\n        timestamp={timestamp}\r\n      />\r\n    );\r\n\r\n    // Should display time in HH:MM format\r\n    expect(screen.getByText(\"12:30\")).toBeInTheDocument();\r\n  });\r\n\r\n  it(\"shows streaming indicator for streaming messages\", () => {\r\n    render(\r\n      <ChatMessage\r\n        message=\"Partial message\"\r\n        isUser={false}\r\n        isStreaming={true}\r\n      />\r\n    );\r\n\r\n    // Streaming indicator should be present (animated cursor)\r\n    const streamingIndicator = screen.getByText(\"Partial message\").parentElement?.querySelector(\".animate-pulse\");\r\n    expect(streamingIndicator).toBeInTheDocument();\r\n  });\r\n\r\n  it(\"displays citations with correct links\", () => {\r\n    const citations = [\r\n      { text: \"IRC Section 162\", url: \"https://www.irs.gov/pub/irs-pdf/p535.pdf\" },\r\n      { text: \"Publication 535\", url: \"https://www.irs.gov/publications/p535\" }\r\n    ];\r\n\r\n    render(\r\n      <ChatMessage\r\n        message=\"Tax information with citations\"\r\n        isUser={false}\r\n        citations={citations}\r\n      />\r\n    );\r\n\r\n    // Check sources section exists\r\n    expect(screen.getByText(\"Sources:\")).toBeInTheDocument();\r\n    \r\n    // Check citation links\r\n    const ircLink = screen.getByRole(\"link\", { name: \"IRC Section 162\" });\r\n    const pubLink = screen.getByRole(\"link\", { name: \"Publication 535\" });\r\n    \r\n    expect(ircLink).toHaveAttribute(\"href\", \"https://www.irs.gov/pub/irs-pdf/p535.pdf\");\r\n    expect(ircLink).toHaveAttribute(\"target\", \"_blank\");\r\n    expect(ircLink).toHaveAttribute(\"rel\", \"noopener noreferrer\");\r\n    \r\n    expect(pubLink).toHaveAttribute(\"href\", \"https://www.irs.gov/publications/p535\");\r\n    expect(pubLink).toHaveAttribute(\"target\", \"_blank\");\r\n    expect(pubLink).toHaveAttribute(\"rel\", \"noopener noreferrer\");\r\n  });\r\n\r\n  it(\"shows copy button for AI messages\", () => {\r\n    render(\r\n      <ChatMessage\r\n        message=\"AI response message\"\r\n        isUser={false}\r\n        onCopy={mockOnCopy}\r\n      />\r\n    );\r\n\r\n    const copyButton = screen.getByRole(\"button\", { name: /copy message/i });\r\n    expect(copyButton).toBeInTheDocument();\r\n  });\r\n\r\n  it(\"does not show copy button for user messages\", () => {\r\n    render(\r\n      <ChatMessage\r\n        message=\"User message\"\r\n        isUser={true}\r\n      />\r\n    );\r\n\r\n    const copyButton = screen.queryByRole(\"button\", { name: /copy message/i });\r\n    expect(copyButton).not.toBeInTheDocument();\r\n  });\r\n\r\n  it(\"does not show action buttons for streaming messages\", () => {\r\n    render(\r\n      <ChatMessage\r\n        message=\"Streaming message\"\r\n        isUser={false}\r\n        isStreaming={true}\r\n        onCopy={mockOnCopy}\r\n        onFeedback={mockOnFeedback}\r\n      />\r\n    );\r\n\r\n    const copyButton = screen.queryByRole(\"button\", { name: /copy message/i });\r\n    const thumbsUpButton = screen.queryByRole(\"button\", { name: /thumbs up/i });\r\n    \r\n    expect(copyButton).not.toBeInTheDocument();\r\n    expect(thumbsUpButton).not.toBeInTheDocument();\r\n  });\r\n\r\n  it(\"copies message to clipboard when copy button is clicked\", async () => {\r\n    const user = userEvent.setup();\r\n    render(\r\n      <ChatMessage\r\n        message=\"Message to copy\"\r\n        isUser={false}\r\n        onCopy={mockOnCopy}\r\n      />\r\n    );\r\n\r\n    const copyButton = screen.getByRole(\"button\", { name: /copy message/i });\r\n    await user.click(copyButton);\r\n\r\n    expect(navigator.clipboard.writeText).toHaveBeenCalledWith(\"Message to copy\");\r\n    expect(mockOnCopy).toHaveBeenCalled();\r\n  });\r\n\r\n  it(\"shows copy success toast after copying\", async () => {\r\n    const user = userEvent.setup();\r\n    render(\r\n      <ChatMessage\r\n        message=\"Message to copy\"\r\n        isUser={false}\r\n        onCopy={mockOnCopy}\r\n      />\r\n    );\r\n\r\n    const copyButton = screen.getByRole(\"button\", { name: /copy message/i });\r\n    await user.click(copyButton);\r\n\r\n    expect(screen.getByText(\"Copied to clipboard\")).toBeInTheDocument();\r\n    \r\n    // Toast should disappear after 2 seconds\r\n    await waitFor(\r\n      () => {\r\n        expect(screen.queryByText(\"Copied to clipboard\")).not.toBeInTheDocument();\r\n      },\r\n      { timeout: 3000 }\r\n    );\r\n  });\r\n\r\n  it(\"shows feedback buttons for AI messages\", () => {\r\n    render(\r\n      <ChatMessage\r\n        message=\"AI response\"\r\n        isUser={false}\r\n        onFeedback={mockOnFeedback}\r\n      />\r\n    );\r\n\r\n    const thumbsUpButton = screen.getByRole(\"button\", { name: /thumbs up/i });\r\n    const thumbsDownButton = screen.getByRole(\"button\", { name: /thumbs down/i });\r\n    \r\n    expect(thumbsUpButton).toBeInTheDocument();\r\n    expect(thumbsDownButton).toBeInTheDocument();\r\n  });\r\n\r\n  it(\"calls onFeedback when thumbs up is clicked\", async () => {\r\n    const user = userEvent.setup();\r\n    render(\r\n      <ChatMessage\r\n        message=\"AI response\"\r\n        isUser={false}\r\n        onFeedback={mockOnFeedback}\r\n      />\r\n    );\r\n\r\n    const thumbsUpButton = screen.getByRole(\"button\", { name: /thumbs up/i });\r\n    await user.click(thumbsUpButton);\r\n\r\n    expect(mockOnFeedback).toHaveBeenCalledWith(\"up\");\r\n  });\r\n\r\n  it(\"calls onFeedback when thumbs down is clicked\", async () => {\r\n    const user = userEvent.setup();\r\n    render(\r\n      <ChatMessage\r\n        message=\"AI response\"\r\n        isUser={false}\r\n        onFeedback={mockOnFeedback}\r\n      />\r\n    );\r\n\r\n    const thumbsDownButton = screen.getByRole(\"button\", { name: /thumbs down/i });\r\n    await user.click(thumbsDownButton);\r\n\r\n    expect(mockOnFeedback).toHaveBeenCalledWith(\"down\");\r\n  });\r\n\r\n  it(\"highlights selected feedback button\", () => {\r\n    render(\r\n      <ChatMessage\r\n        message=\"AI response\"\r\n        isUser={false}\r\n        feedbackValue=\"up\"\r\n        onFeedback={mockOnFeedback}\r\n      />\r\n    );\r\n\r\n    const thumbsUpButton = screen.getByRole(\"button\", { name: /thumbs up/i });\r\n    const thumbsDownButton = screen.getByRole(\"button\", { name: /thumbs down/i });\r\n    \r\n    expect(thumbsUpButton).toHaveClass(\"text-green-600\");\r\n    expect(thumbsDownButton).not.toHaveClass(\"text-red-600\");\r\n  });\r\n\r\n  it(\"preserves line breaks in message content\", () => {\r\n    const multilineMessage = \"Line 1\\nLine 2\\nLine 3\";\r\n    render(\r\n      <ChatMessage\r\n        message={multilineMessage}\r\n        isUser={false}\r\n      />\r\n    );\r\n\r\n    const messageElement = screen.getByText(multilineMessage);\r\n    expect(messageElement).toHaveClass(\"whitespace-pre-wrap\");\r\n  });\r\n\r\n  it(\"handles long messages with word wrapping\", () => {\r\n    const longMessage = \"This is a very long message that should wrap to multiple lines when the container width is exceeded. It should break words appropriately and maintain readability.\";\r\n    \r\n    render(\r\n      <ChatMessage\r\n        message={longMessage}\r\n        isUser={false}\r\n      />\r\n    );\r\n\r\n    const messageElement = screen.getByText(longMessage);\r\n    expect(messageElement).toHaveClass(\"break-words\");\r\n  });\r\n\r\n  it(\"handles error when clipboard API fails\", async () => {\r\n    const consoleSpy = jest.spyOn(console, \"error\").mockImplementation(() => {});\r\n    (navigator.clipboard.writeText as jest.Mock).mockRejectedValueOnce(new Error(\"Clipboard error\"));\r\n    \r\n    const user = userEvent.setup();\r\n    render(\r\n      <ChatMessage\r\n        message=\"Message to copy\"\r\n        isUser={false}\r\n        onCopy={mockOnCopy}\r\n      />\r\n    );\r\n\r\n    const copyButton = screen.getByRole(\"button\", { name: /copy message/i });\r\n    await user.click(copyButton);\r\n\r\n    expect(consoleSpy).toHaveBeenCalledWith(\"Failed to copy message:\", expect.any(Error));\r\n    consoleSpy.mockRestore();\r\n  });\r\n});"],"version":3}