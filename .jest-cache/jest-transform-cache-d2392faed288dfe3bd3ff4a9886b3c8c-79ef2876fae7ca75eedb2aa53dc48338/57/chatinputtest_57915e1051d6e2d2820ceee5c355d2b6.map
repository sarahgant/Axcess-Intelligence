{"file":"C:\\Users\\sarah\\Repos\\CCH Axcess Intelligence Vibed\\tests\\unit\\chat-input.test.tsx","mappings":"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","names":[],"sources":["C:\\Users\\sarah\\Repos\\CCH Axcess Intelligence Vibed\\tests\\unit\\chat-input.test.tsx"],"sourcesContent":["import React from \"react\";\nimport { render, screen, fireEvent, waitFor } from \"@testing-library/react\";\nimport userEvent from \"@testing-library/user-event\";\nimport \"@testing-library/jest-dom\";\nimport { ChatInput } from \"../../src/components/ui/chat-input\";\n\ndescribe(\"ChatInput\", () => {\n  const mockOnSend = jest.fn();\n  const mockOnStop = jest.fn();\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  it(\"renders chat input with correct placeholder\", () => {\n    render(<ChatInput onSend={mockOnSend} />);\n\n    const textarea = screen.getByRole(\"textbox\");\n    expect(textarea).toBeInTheDocument();\n    expect(textarea).toHaveAttribute(\n      \"placeholder\",\n      \"Type your message... (Enter to send, Shift+Enter for new line)\"\n    );\n  });\n\n  it(\"displays send button when not streaming\", () => {\n    render(<ChatInput onSend={mockOnSend} isStreaming={false} />);\n\n    const sendButton = screen.getByRole(\"button\", { name: /send message/i });\n    expect(sendButton).toBeInTheDocument();\n    expect(sendButton).toHaveTextContent(\"Send\");\n  });\n\n  it(\"displays stop button when streaming\", () => {\n    render(<ChatInput onSend={mockOnSend} onStop={mockOnStop} isStreaming={true} />);\n\n    const stopButton = screen.getByRole(\"button\", { name: /stop streaming response/i });\n    expect(stopButton).toBeInTheDocument();\n    expect(stopButton).toHaveTextContent(\"Stop\");\n  });\n\n  it(\"sends message on Enter key press\", async () => {\n    const user = userEvent.setup();\n    render(<ChatInput onSend={mockOnSend} />);\n\n    const textarea = screen.getByRole(\"textbox\");\n    await user.type(textarea, \"Test message\");\n    await user.keyboard(\"{Enter}\");\n\n    expect(mockOnSend).toHaveBeenCalledWith(\"Test message\");\n  });\n\n  it(\"adds new line on Shift+Enter\", async () => {\n    const user = userEvent.setup();\n    render(<ChatInput onSend={mockOnSend} />);\n\n    const textarea = screen.getByRole(\"textbox\");\n    await user.type(textarea, \"Line 1\");\n    await user.keyboard(\"{Shift>}{Enter}{/Shift}\");\n    await user.type(textarea, \"Line 2\");\n\n    expect(textarea).toHaveValue(\"Line 1\\nLine 2\");\n    expect(mockOnSend).not.toHaveBeenCalled();\n  });\n\n  it(\"sends message on button click\", async () => {\n    const user = userEvent.setup();\n    render(<ChatInput onSend={mockOnSend} />);\n\n    const textarea = screen.getByRole(\"textbox\");\n    const sendButton = screen.getByRole(\"button\", { name: /send message/i });\n\n    await user.type(textarea, \"Test message\");\n    await user.click(sendButton);\n\n    expect(mockOnSend).toHaveBeenCalledWith(\"Test message\");\n  });\n\n  it(\"clears input after sending message\", async () => {\n    const user = userEvent.setup();\n    render(<ChatInput onSend={mockOnSend} />);\n\n    const textarea = screen.getByRole(\"textbox\");\n    await user.type(textarea, \"Test message\");\n    await user.keyboard(\"{Enter}\");\n\n    expect(textarea).toHaveValue(\"\");\n  });\n\n  it(\"disables send button for empty input\", () => {\n    render(<ChatInput onSend={mockOnSend} />);\n\n    const sendButton = screen.getByRole(\"button\", { name: /send message/i });\n    expect(sendButton).toBeDisabled();\n  });\n\n  it(\"disables send button for whitespace-only input\", async () => {\n    const user = userEvent.setup();\n    render(<ChatInput onSend={mockOnSend} />);\n\n    const textarea = screen.getByRole(\"textbox\");\n    const sendButton = screen.getByRole(\"button\", { name: /send message/i });\n\n    await user.type(textarea, \"   \");\n    expect(sendButton).toBeDisabled();\n  });\n\n  it(\"enables send button for valid input\", async () => {\n    const user = userEvent.setup();\n    render(<ChatInput onSend={mockOnSend} />);\n\n    const textarea = screen.getByRole(\"textbox\");\n    const sendButton = screen.getByRole(\"button\", { name: /send message/i });\n\n    await user.type(textarea, \"Valid message\");\n    expect(sendButton).not.toBeDisabled();\n  });\n\n  it(\"calls onStop when stop button is clicked\", async () => {\n    const user = userEvent.setup();\n    render(<ChatInput onSend={mockOnSend} onStop={mockOnStop} isStreaming={true} />);\n\n    const stopButton = screen.getByRole(\"button\", { name: /stop streaming response/i });\n    await user.click(stopButton);\n\n    expect(mockOnStop).toHaveBeenCalled();\n  });\n\n  it(\"auto-resizes textarea as content grows\", async () => {\n    const user = userEvent.setup();\n    render(<ChatInput onSend={mockOnSend} maxLines={5} />);\n\n    const textarea = screen.getByRole(\"textbox\");\n    const initialHeight = textarea.getBoundingClientRect().height;\n\n    // Add multiple lines\n    await user.type(textarea, \"Line 1\\nLine 2\\nLine 3\\nLine 4\");\n\n    // Wait for height adjustment\n    await waitFor(() => {\n      const newHeight = textarea.getBoundingClientRect().height;\n      expect(newHeight).toBeGreaterThan(initialHeight);\n    });\n  });\n\n  it(\"does not send empty messages\", async () => {\n    const user = userEvent.setup();\n    render(<ChatInput onSend={mockOnSend} />);\n\n    const textarea = screen.getByRole(\"textbox\");\n    await user.keyboard(\"{Enter}\");\n\n    expect(mockOnSend).not.toHaveBeenCalled();\n  });\n\n  it(\"trims whitespace from messages before sending\", async () => {\n    const user = userEvent.setup();\n    render(<ChatInput onSend={mockOnSend} />);\n\n    const textarea = screen.getByRole(\"textbox\");\n    await user.type(textarea, \"  Test message  \");\n    await user.keyboard(\"{Enter}\");\n\n    expect(mockOnSend).toHaveBeenCalledWith(\"Test message\");\n  });\n\n  it(\"prevents sending when streaming\", async () => {\n    const user = userEvent.setup();\n    render(<ChatInput onSend={mockOnSend} isStreaming={true} />);\n\n    const textarea = screen.getByRole(\"textbox\");\n    await user.type(textarea, \"Test message\");\n    await user.keyboard(\"{Enter}\");\n\n    expect(mockOnSend).not.toHaveBeenCalled();\n  });\n\n  it(\"maintains focus after sending message\", async () => {\n    const user = userEvent.setup();\n    render(<ChatInput onSend={mockOnSend} />);\n\n    const textarea = screen.getByRole(\"textbox\");\n    await user.type(textarea, \"Test message\");\n    await user.keyboard(\"{Enter}\");\n\n    await waitFor(() => {\n      expect(textarea).toHaveFocus();\n    });\n  });\n\n  // New tests for expandable input field functionality\n  describe(\"Expandable Input Field\", () => {\n    beforeEach(() => {\n      // Mock getBoundingClientRect for consistent height calculations\n      Object.defineProperty(HTMLElement.prototype, 'getBoundingClientRect', {\n        configurable: true,\n        value: jest.fn(() => ({\n          width: 400,\n          height: 40, // Base height for single line\n          top: 0,\n          left: 0,\n          bottom: 40,\n          right: 400,\n        })),\n      });\n\n      // Mock getComputedStyle for line height\n      Object.defineProperty(window, 'getComputedStyle', {\n        value: jest.fn(() => ({\n          lineHeight: '20px',\n          fontSize: '14px',\n          paddingTop: '8px',\n          paddingBottom: '8px',\n        })),\n      });\n    });\n\n    it(\"starts with single line height (approximately 40px)\", () => {\n      render(<ChatInput onSend={mockOnSend} />);\n      const textarea = screen.getByRole(\"textbox\");\n      \n      // Check initial height\n      expect(textarea.style.height).toBe(\"40px\");\n    });\n\n    it(\"expands height when text wraps to new line\", async () => {\n      const user = userEvent.setup();\n      render(<ChatInput onSend={mockOnSend} />);\n      const textarea = screen.getByRole(\"textbox\");\n\n      // Mock scrollHeight to simulate text wrapping\n      Object.defineProperty(textarea, 'scrollHeight', {\n        configurable: true,\n        value: 60, // Height for 2 lines\n      });\n\n      await user.type(textarea, \"This is a very long line that will wrap to multiple lines in the textarea\");\n\n      await waitFor(() => {\n        expect(textarea.style.height).toBe(\"60px\");\n      });\n    });\n\n    it(\"grows by one line height for each text line up to 3 lines\", async () => {\n      const user = userEvent.setup();\n      render(<ChatInput onSend={mockOnSend} />);\n      const textarea = screen.getByRole(\"textbox\");\n\n      // Simulate 3 lines of text\n      Object.defineProperty(textarea, 'scrollHeight', {\n        configurable: true,\n        value: 80, // Height for 3 lines (40 base + 40 for 2 additional lines)\n      });\n\n      await user.type(textarea, \"Line 1\\nLine 2\\nLine 3\");\n\n      await waitFor(() => {\n        expect(textarea.style.height).toBe(\"80px\");\n      });\n    });\n\n    it(\"displays scrollbar after 10 lines maximum\", async () => {\n      const user = userEvent.setup();\n      render(<ChatInput onSend={mockOnSend} maxLines={10} />);\n      const textarea = screen.getByRole(\"textbox\");\n\n      // Simulate 15 lines of text (exceeds maximum)\n      Object.defineProperty(textarea, 'scrollHeight', {\n        configurable: true,\n        value: 320, // Height for 15 lines\n      });\n\n      const longText = Array(15).fill(\"Line\").map((line, i) => `${line} ${i + 1}`).join(\"\\n\");\n      await user.type(textarea, longText);\n\n      await waitFor(() => {\n        // Should be capped at max height (10 lines * 20px line height + padding = 240px)\n        expect(textarea.style.height).toBe(\"240px\");\n        expect(textarea.style.overflowY).toBe(\"auto\");\n      });\n    });\n\n    it(\"contracts when text is deleted to match content\", async () => {\n      const user = userEvent.setup();\n      render(<ChatInput onSend={mockOnSend} />);\n      const textarea = screen.getByRole(\"textbox\");\n\n      // First, expand to 3 lines\n      Object.defineProperty(textarea, 'scrollHeight', {\n        configurable: true,\n        value: 80,\n      });\n      await user.type(textarea, \"Line 1\\nLine 2\\nLine 3\");\n\n      await waitFor(() => {\n        expect(textarea.style.height).toBe(\"80px\");\n      });\n\n      // Then contract to 1 line\n      Object.defineProperty(textarea, 'scrollHeight', {\n        configurable: true,\n        value: 40,\n      });\n      await user.clear(textarea);\n      await user.type(textarea, \"Short\");\n\n      await waitFor(() => {\n        expect(textarea.style.height).toBe(\"40px\");\n      });\n    });\n\n    it(\"maintains smooth expansion animation with 200ms transition\", () => {\n      render(<ChatInput onSend={mockOnSend} />);\n      const textarea = screen.getByRole(\"textbox\");\n\n      // Check for transition CSS property\n      const computedStyle = getComputedStyle(textarea);\n      expect(computedStyle.transition).toContain(\"height\");\n      expect(computedStyle.transition).toContain(\"200ms\");\n    });\n\n    it(\"preserves expansion state during composition\", async () => {\n      const user = userEvent.setup();\n      render(<ChatInput onSend={mockOnSend} />);\n      const textarea = screen.getByRole(\"textbox\");\n\n      // Expand to multiple lines\n      Object.defineProperty(textarea, 'scrollHeight', {\n        configurable: true,\n        value: 80,\n      });\n      await user.type(textarea, \"Line 1\\nLine 2\\nLine 3\");\n\n      await waitFor(() => {\n        expect(textarea.style.height).toBe(\"80px\");\n      });\n\n      // Continue typing without losing height\n      await user.type(textarea, \"\\nLine 4\");\n\n      Object.defineProperty(textarea, 'scrollHeight', {\n        configurable: true,\n        value: 100,\n      });\n\n      await waitFor(() => {\n        expect(textarea.style.height).toBe(\"100px\");\n      });\n    });\n\n    it(\"resets to single line after message sent\", async () => {\n      const user = userEvent.setup();\n      render(<ChatInput onSend={mockOnSend} />);\n      const textarea = screen.getByRole(\"textbox\");\n\n      // Expand to multiple lines\n      Object.defineProperty(textarea, 'scrollHeight', {\n        configurable: true,\n        value: 80,\n      });\n      await user.type(textarea, \"Line 1\\nLine 2\\nLine 3\");\n\n      await waitFor(() => {\n        expect(textarea.style.height).toBe(\"80px\");\n      });\n\n      // Send message\n      Object.defineProperty(textarea, 'scrollHeight', {\n        configurable: true,\n        value: 40, // Reset to single line height\n      });\n      await user.keyboard(\"{Enter}\");\n\n      await waitFor(() => {\n        expect(textarea.style.height).toBe(\"40px\");\n        expect(textarea).toHaveValue(\"\");\n      });\n    });\n  });\n\n  // Edge case tests\n  describe(\"Edge Cases\", () => {\n    beforeEach(() => {\n      // Setup mocks for edge case testing\n      Object.defineProperty(HTMLElement.prototype, 'getBoundingClientRect', {\n        configurable: true,\n        value: jest.fn(() => ({\n          width: 400,\n          height: 40,\n          top: 0,\n          left: 0,\n          bottom: 40,\n          right: 400,\n        })),\n      });\n\n      Object.defineProperty(window, 'getComputedStyle', {\n        value: jest.fn(() => ({\n          lineHeight: '20px',\n          fontSize: '14px',\n          paddingTop: '8px',\n          paddingBottom: '8px',\n        })),\n      });\n    });\n\n    it(\"handles pasting 20 lines - verifies max 10 lines visible with scroll\", async () => {\n      const user = userEvent.setup();\n      render(<ChatInput onSend={mockOnSend} maxLines={10} />);\n      const textarea = screen.getByRole(\"textbox\");\n\n      const twentyLines = Array(20).fill(\"Long line of text\").map((line, i) => `${line} ${i + 1}`).join(\"\\n\");\n      \n      // Mock scrollHeight for 20 lines\n      Object.defineProperty(textarea, 'scrollHeight', {\n        configurable: true,\n        value: 420, // 20 lines * 20px + padding\n      });\n\n      await user.click(textarea);\n      await user.paste(twentyLines);\n\n      await waitFor(() => {\n        // Should be capped at 10 lines (240px)\n        expect(textarea.style.height).toBe(\"240px\");\n        expect(textarea.scrollTop).toBeGreaterThanOrEqual(0);\n      });\n    });\n\n    it(\"handles rapid expand/contract without flickering\", async () => {\n      const user = userEvent.setup();\n      render(<ChatInput onSend={mockOnSend} />);\n      const textarea = screen.getByRole(\"textbox\");\n\n      // Rapid typing and deleting\n      for (let i = 0; i < 5; i++) {\n        Object.defineProperty(textarea, 'scrollHeight', {\n          configurable: true,\n          value: 60 + (i * 20),\n        });\n        await user.type(textarea, `\\nLine ${i + 2}`);\n        \n        // Verify height increases\n        await waitFor(() => {\n          expect(parseInt(textarea.style.height)).toBeGreaterThan(40);\n        });\n      }\n\n      // Rapid deletion\n      for (let i = 4; i >= 0; i--) {\n        await user.keyboard(\"{Backspace}\".repeat(10));\n        Object.defineProperty(textarea, 'scrollHeight', {\n          configurable: true,\n          value: 60 + (i * 20),\n        });\n      }\n\n      // Should handle rapid changes smoothly\n      expect(textarea.style.transition).toContain(\"height\");\n    });\n\n    it(\"handles wide characters causing wrap\", async () => {\n      const user = userEvent.setup();\n      render(<ChatInput onSend={mockOnSend} />);\n      const textarea = screen.getByRole(\"textbox\");\n\n      // Wide characters and emojis\n      const wideText = \"🚀📊💼🎯⚡🔥💡🎨🌟✨\" + \"很长的中文字符串会导致文本换行\";\n      \n      Object.defineProperty(textarea, 'scrollHeight', {\n        configurable: true,\n        value: 80, // Simulates wrapping\n      });\n\n      await user.type(textarea, wideText);\n\n      await waitFor(() => {\n        expect(textarea.style.height).toBe(\"80px\");\n      });\n    });\n\n    it(\"handles window resize during typing\", async () => {\n      const user = userEvent.setup();\n      render(<ChatInput onSend={mockOnSend} />);\n      const textarea = screen.getByRole(\"textbox\");\n\n      await user.type(textarea, \"Some text that might reflow\");\n      \n      // Simulate window resize\n      Object.defineProperty(textarea, 'scrollHeight', {\n        configurable: true,\n        value: 60,\n      });\n\n      // Trigger resize event\n      fireEvent(window, new Event('resize'));\n\n      await waitFor(() => {\n        expect(textarea.style.height).toBe(\"60px\");\n      });\n    });\n  });\n\n  // Negative test cases\n  describe(\"Negative Tests\", () => {\n    beforeEach(() => {\n      Object.defineProperty(HTMLElement.prototype, 'getBoundingClientRect', {\n        configurable: true,\n        value: jest.fn(() => ({\n          width: 400,\n          height: 40,\n          top: 0,\n          left: 0,\n          bottom: 40,\n          right: 400,\n        })),\n      });\n\n      Object.defineProperty(window, 'getComputedStyle', {\n        value: jest.fn(() => ({\n          lineHeight: '20px',\n          fontSize: '14px',\n          paddingTop: '8px',\n          paddingBottom: '8px',\n        })),\n      });\n    });\n\n    it(\"prevents expansion beyond maximum limit\", async () => {\n      const user = userEvent.setup();\n      render(<ChatInput onSend={mockOnSend} maxLines={10} />);\n      const textarea = screen.getByRole(\"textbox\");\n\n      // Try to force expansion beyond 10 lines\n      Object.defineProperty(textarea, 'scrollHeight', {\n        configurable: true,\n        value: 500, // Much larger than 10 lines\n      });\n\n      const manyLines = Array(15).fill(\"Line\").map((line, i) => `${line} ${i + 1}`).join(\"\\n\");\n      await user.type(textarea, manyLines);\n\n      await waitFor(() => {\n        // Should be capped at max height (10 lines * 20px + padding = 240px)\n        expect(parseInt(textarea.style.height)).toBeLessThanOrEqual(240);\n      });\n    });\n\n    it(\"maintains minimum height with negative or zero values\", () => {\n      render(<ChatInput onSend={mockOnSend} />);\n      const textarea = screen.getByRole(\"textbox\");\n\n      // Mock negative scrollHeight (shouldn't happen in real scenarios)\n      Object.defineProperty(textarea, 'scrollHeight', {\n        configurable: true,\n        value: -10,\n      });\n\n      // Trigger height adjustment\n      fireEvent.change(textarea, { target: { value: \"\" } });\n\n      // Should maintain minimum height\n      expect(parseInt(textarea.style.height)).toBeGreaterThanOrEqual(40);\n    });\n\n    it(\"handles invalid maxLines prop gracefully\", () => {\n      // Test with negative maxLines\n      render(<ChatInput onSend={mockOnSend} maxLines={-5} />);\n      const textarea = screen.getByRole(\"textbox\");\n      \n      // Should default to a reasonable minimum\n      expect(textarea).toBeInTheDocument();\n      \n      // Test with zero maxLines\n      render(<ChatInput onSend={mockOnSend} maxLines={0} />);\n      const textarea2 = screen.getAllByRole(\"textbox\")[1];\n      expect(textarea2).toBeInTheDocument();\n    });\n  });\n});"],"version":3}