{"version":3,"names":["dispatchEvent","require","isElementType","UI","interceptor","isPrepared","Symbol","prepareDocument","document","addEventListener","e","el","target","prepareElement","capture","passive","activeElement","initialValue","getInitialValue","undefined","value","dispatchDOMEvent","clearInitialValue","prepareValueInterceptor","prepareSelectionInterceptor","prepareRangeTextInterceptor","exports"],"sources":["prepareDocument.js"],"sourcesContent":["'use strict';\n\nvar dispatchEvent = require('../event/dispatchEvent.js');\nvar isElementType = require('../utils/misc/isElementType.js');\nrequire('../utils/dataTransfer/Clipboard.js');\nvar UI = require('./UI.js');\nrequire('@testing-library/dom');\nvar interceptor = require('./interceptor.js');\n\nconst isPrepared = Symbol('Node prepared with document state workarounds');\nfunction prepareDocument(document) {\n    if (document[isPrepared]) {\n        return;\n    }\n    document.addEventListener('focus', (e)=>{\n        const el = e.target;\n        prepareElement(el);\n    }, {\n        capture: true,\n        passive: true\n    });\n    // Our test environment defaults to `document.body` as `activeElement`.\n    // In other environments this might be `null` when preparing.\n    // istanbul ignore else\n    if (document.activeElement) {\n        prepareElement(document.activeElement);\n    }\n    document.addEventListener('blur', (e)=>{\n        const el = e.target;\n        const initialValue = UI.getInitialValue(el);\n        if (initialValue !== undefined) {\n            if (el.value !== initialValue) {\n                dispatchEvent.dispatchDOMEvent(el, 'change');\n            }\n            UI.clearInitialValue(el);\n        }\n    }, {\n        capture: true,\n        passive: true\n    });\n    document[isPrepared] = isPrepared;\n}\nfunction prepareElement(el) {\n    if (el[isPrepared]) {\n        return;\n    }\n    if (isElementType.isElementType(el, [\n        'input',\n        'textarea'\n    ])) {\n        interceptor.prepareValueInterceptor(el);\n        interceptor.prepareSelectionInterceptor(el);\n        interceptor.prepareRangeTextInterceptor(el);\n    }\n    el[isPrepared] = isPrepared;\n}\n\nexports.prepareDocument = prepareDocument;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,aAAa,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AACxD,IAAIC,aAAa,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AAC7DA,OAAO,CAAC,oCAAoC,CAAC;AAC7C,IAAIE,EAAE,GAAGF,OAAO,CAAC,SAAS,CAAC;AAC3BA,OAAO,CAAC,sBAAsB,CAAC;AAC/B,IAAIG,WAAW,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAE7C,MAAMI,UAAU,GAAGC,MAAM,CAAC,+CAA+C,CAAC;AAC1E,SAASC,eAAeA,CAACC,QAAQ,EAAE;EAC/B,IAAIA,QAAQ,CAACH,UAAU,CAAC,EAAE;IACtB;EACJ;EACAG,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAGC,CAAC,IAAG;IACpC,MAAMC,EAAE,GAAGD,CAAC,CAACE,MAAM;IACnBC,cAAc,CAACF,EAAE,CAAC;EACtB,CAAC,EAAE;IACCG,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE;EACb,CAAC,CAAC;EACF;EACA;EACA;EACA,IAAIP,QAAQ,CAACQ,aAAa,EAAE;IACxBH,cAAc,CAACL,QAAQ,CAACQ,aAAa,CAAC;EAC1C;EACAR,QAAQ,CAACC,gBAAgB,CAAC,MAAM,EAAGC,CAAC,IAAG;IACnC,MAAMC,EAAE,GAAGD,CAAC,CAACE,MAAM;IACnB,MAAMK,YAAY,GAAGd,EAAE,CAACe,eAAe,CAACP,EAAE,CAAC;IAC3C,IAAIM,YAAY,KAAKE,SAAS,EAAE;MAC5B,IAAIR,EAAE,CAACS,KAAK,KAAKH,YAAY,EAAE;QAC3BjB,aAAa,CAACqB,gBAAgB,CAACV,EAAE,EAAE,QAAQ,CAAC;MAChD;MACAR,EAAE,CAACmB,iBAAiB,CAACX,EAAE,CAAC;IAC5B;EACJ,CAAC,EAAE;IACCG,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE;EACb,CAAC,CAAC;EACFP,QAAQ,CAACH,UAAU,CAAC,GAAGA,UAAU;AACrC;AACA,SAASQ,cAAcA,CAACF,EAAE,EAAE;EACxB,IAAIA,EAAE,CAACN,UAAU,CAAC,EAAE;IAChB;EACJ;EACA,IAAIH,aAAa,CAACA,aAAa,CAACS,EAAE,EAAE,CAChC,OAAO,EACP,UAAU,CACb,CAAC,EAAE;IACAP,WAAW,CAACmB,uBAAuB,CAACZ,EAAE,CAAC;IACvCP,WAAW,CAACoB,2BAA2B,CAACb,EAAE,CAAC;IAC3CP,WAAW,CAACqB,2BAA2B,CAACd,EAAE,CAAC;EAC/C;EACAA,EAAE,CAACN,UAAU,CAAC,GAAGA,UAAU;AAC/B;AAEAqB,OAAO,CAACnB,eAAe,GAAGA,eAAe","ignoreList":[]}