{"file":"C:\\Users\\sarah\\Repos\\CCH Axcess Intelligence Vibed\\tests\\unit\\validation-schemas-step.test.ts","mappings":"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","names":[],"sources":["C:\\Users\\sarah\\Repos\\CCH Axcess Intelligence Vibed\\tests\\unit\\validation-schemas-step.test.ts"],"sourcesContent":["import { describe, it, expect } from '@jest/globals';\r\nimport * as z from 'zod';\r\n\r\ndescribe('Validation Schemas Step by Step', () => {\r\n  it('should create messageSchema', () => {\r\n    const messageSchema = z.object({\r\n      content: z.string().min(1).max(10000),\r\n      role: z.enum(['user', 'assistant', 'system']),\r\n      timestamp: z.date().optional(),\r\n      metadata: z.record(z.string()).optional()\r\n    });\r\n\r\n    const validMessage = {\r\n      content: 'Hello, world!',\r\n      role: 'user' as const,\r\n      timestamp: new Date(),\r\n      metadata: { sessionId: '123' }\r\n    };\r\n\r\n    const result = messageSchema.safeParse(validMessage);\r\n    expect(result.success).toBe(true);\r\n  });\r\n\r\n  it('should create fileUploadSchema', () => {\r\n    const fileUploadSchema = z.object({\r\n      name: z.string().min(1).max(255),\r\n      size: z.number().max(20 * 1024 * 1024),\r\n      type: z.enum([\r\n        'application/pdf',\r\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n        'text/plain',\r\n        'image/png',\r\n        'image/jpeg'\r\n      ]),\r\n      content: z.instanceof(File)\r\n    });\r\n\r\n    const mockFile = new File(['test content'], 'test.pdf', { type: 'application/pdf' });\r\n    const validUpload = {\r\n      name: 'test.pdf',\r\n      size: 1024,\r\n      type: 'application/pdf' as const,\r\n      content: mockFile\r\n    };\r\n\r\n    const result = fileUploadSchema.safeParse(validUpload);\r\n    expect(result.success).toBe(true);\r\n  });\r\n\r\n  it('should create apiRequestSchema', () => {\r\n    const messageSchema = z.object({\r\n      content: z.string().min(1).max(10000),\r\n      role: z.enum(['user', 'assistant', 'system']),\r\n      timestamp: z.date().optional(),\r\n      metadata: z.record(z.string()).optional()\r\n    });\r\n\r\n    const apiRequestSchema = z.object({\r\n      messages: z.array(messageSchema).min(1),\r\n      model: z.string().optional(),\r\n      temperature: z.number().min(0).max(2).optional(),\r\n      maxTokens: z.number().min(1).max(100000).optional()\r\n    });\r\n\r\n    const validRequest = {\r\n      messages: [\r\n        {\r\n          content: 'Hello',\r\n          role: 'user' as const\r\n        },\r\n        {\r\n          content: 'Hi there!',\r\n          role: 'assistant' as const\r\n        }\r\n      ],\r\n      model: 'gpt-4',\r\n      temperature: 0.7,\r\n      maxTokens: 1000\r\n    };\r\n\r\n    const result = apiRequestSchema.safeParse(validRequest);\r\n    expect(result.success).toBe(true);\r\n  });\r\n});\r\n"],"version":3}